
Metrics report:
Metric: DeviceLockWait
  TotalSamples: 3
  Accumulator: 004.260us
  ValueRate: 005.410us / second
  Rate: 3.80997 / second
  Percentiles: 1%=001.249us; 5%=001.249us; 10%=001.249us; 20%=001.249us; 50%=001.443us; 80%=001.568us; 90%=001.568us; 95%=001.568us; 99%=001.568us
Metric: IrValueTensorToDataHandle
  TotalSamples: 626
  Accumulator: 006ms549.488us
  ValueRate: 006ms221.831us / second
  Rate: 701.842 / second
  Percentiles: 1%=005.782us; 5%=006.111us; 10%=006.339us; 20%=006.797us; 50%=007.849us; 80%=010.582us; 90%=011.177us; 95%=012.110us; 99%=023.705us
Metric: TensorsGraphSize
  TotalSamples: 3
  Accumulator: 15.00
  ValueRate: 19.98 / second
  Rate: 3.99513 / second
  Percentiles: 1%=5.00; 5%=5.00; 10%=5.00; 20%=5.00; 50%=5.00; 80%=5.00; 90%=5.00; 95%=5.00; 99%=5.00
Counter: CachedCompile
  Value: 2
Counter: CreateLtcTensor
  Value: 13409
Counter: DestroyLtcTensor
  Value: 13002
Counter: DeviceDataCacheMiss
  Value: 7
Counter: UncachedCompile
  Value: 1
Counter: lazy::_copy_from
  Value: 4577
Counter: lazy::_log_softmax
  Value: 3
Counter: lazy::_log_softmax_backward_data
  Value: 3
Counter: lazy::_softmax
  Value: 36
Counter: lazy::_softmax_backward_data
  Value: 36
Counter: lazy::add
  Value: 2082
Counter: lazy::addcdiv
  Value: 603
Counter: lazy::addcmul
  Value: 603
Counter: lazy::addmm
  Value: 6
Counter: lazy::bernoulli_
  Value: 114
Counter: lazy::bmm
  Value: 216
Counter: lazy::div
  Value: 186
Counter: lazy::embedding_dense_backward
  Value: 9
Counter: lazy::expand
  Value: 144
Counter: lazy::fill_
  Value: 3
Counter: lazy::gelu
  Value: 36
Counter: lazy::gelu_backward
  Value: 36
Counter: lazy::index_select
  Value: 9
Counter: lazy::mm
  Value: 660
Counter: lazy::mul
  Value: 1437
Counter: lazy::native_layer_norm
  Value: 75
Counter: lazy::native_layer_norm_backward
  Value: 75
Counter: lazy::nll_loss_backward
  Value: 3
Counter: lazy::nll_loss_forward
  Value: 3
Counter: lazy::permute
  Value: 288
Counter: lazy::select
  Value: 6
Counter: lazy::slice
  Value: 15
Counter: lazy::sqrt
  Value: 603
Counter: lazy::sub
  Value: 3
Counter: lazy::sum
  Value: 225
Counter: lazy::t
  Value: 888
Counter: lazy::tanh
  Value: 3
Counter: lazy::tanh_backward
  Value: 3
Counter: lazy::transpose
  Value: 216
Counter: lazy::unsqueeze
  Value: 6
Counter: lazy::view
  Value: 1833
Counter: lazy::zero_
  Value: 1011


TorchScriptGraph:
graph(%p0 : Tensor,
      %p1 : Tensor,
      %p2 : Tensor,
      %p3 : Tensor,
      %p4 : Tensor,
      %p5 : Tensor,
      %p6 : Tensor,
      %p7 : Tensor,
      %p8 : Tensor,
      %p9 : Tensor,
      %p10 : Tensor,
      %p11 : Tensor,
      %p12 : Tensor,
      %p13 : Tensor,
      %p14 : Tensor,
      %p15 : Tensor,
      %p16 : Tensor,
      %p17 : Tensor,
      %p18 : Tensor,
      %p19 : Tensor,
      %p20 : Tensor,
      %p21 : Tensor,
      %p22 : Tensor,
      %p23 : Tensor,
      %p24 : Tensor,
      %p25 : Tensor,
      %p26 : Tensor,
      %p27 : Tensor,
      %p28 : Tensor,
      %p29 : Tensor,
      %p30 : Tensor,
      %p31 : Tensor,
      %p32 : Tensor,
      %p33 : Tensor,
      %p34 : Tensor,
      %p35 : Tensor,
      %p36 : Tensor,
      %p37 : Tensor,
      %p38 : Tensor,
      %p39 : Tensor,
      %p40 : Tensor,
      %p41 : Tensor,
      %p42 : Tensor,
      %p43 : Tensor,
      %p44 : Tensor,
      %p45 : Tensor,
      %p46 : Tensor,
      %p47 : Tensor,
      %p48 : Tensor,
      %p49 : Tensor,
      %p50 : Tensor,
      %p51 : Tensor,
      %p52 : Tensor,
      %p53 : Tensor,
      %p54 : Tensor,
      %p55 : Tensor,
      %p56 : Tensor,
      %p57 : Tensor,
      %p58 : Tensor,
      %p59 : Tensor,
      %p60 : Tensor,
      %p61 : Tensor,
      %p62 : Tensor,
      %p63 : Tensor,
      %p64 : Tensor,
      %p65 : Tensor,
      %p66 : Tensor,
      %p67 : Tensor,
      %p68 : Tensor,
      %p69 : Tensor,
      %p70 : Tensor,
      %p71 : Tensor,
      %p72 : Tensor,
      %p73 : Tensor,
      %p74 : Tensor,
      %p75 : Tensor,
      %p76 : Tensor,
      %p77 : Tensor,
      %p78 : Tensor,
      %p79 : Tensor,
      %p80 : Tensor,
      %p81 : Tensor,
      %p82 : Tensor,
      %p83 : Tensor,
      %p84 : Tensor,
      %p85 : Tensor,
      %p86 : Tensor,
      %p87 : Tensor,
      %p88 : Tensor,
      %p89 : Tensor,
      %p90 : Tensor,
      %p91 : Tensor,
      %p92 : Tensor,
      %p93 : Tensor,
      %p94 : Tensor,
      %p95 : Tensor,
      %p96 : Tensor,
      %p97 : Tensor,
      %p98 : Tensor,
      %p99 : Tensor,
      %p100 : Tensor,
      %p101 : Tensor,
      %p102 : Tensor,
      %p103 : Tensor,
      %p104 : Tensor,
      %p105 : Tensor,
      %p106 : Tensor,
      %p107 : Tensor,
      %p108 : Tensor,
      %p109 : Tensor,
      %p110 : Tensor,
      %p111 : Tensor,
      %p112 : Tensor,
      %p113 : Tensor,
      %p114 : Tensor,
      %p115 : Tensor,
      %p116 : Tensor,
      %p117 : Tensor,
      %p118 : Tensor,
      %p119 : Tensor,
      %p120 : Tensor,
      %p121 : Tensor,
      %p122 : Tensor,
      %p123 : Tensor,
      %p124 : Tensor,
      %p125 : Tensor,
      %p126 : Tensor,
      %p127 : Tensor,
      %p128 : Tensor,
      %p129 : Tensor,
      %p130 : Tensor,
      %p131 : Tensor,
      %p132 : Tensor,
      %p133 : Tensor,
      %p134 : Tensor,
      %p135 : Tensor,
      %p136 : Tensor,
      %p137 : Tensor,
      %p138 : Tensor,
      %p139 : Tensor,
      %p140 : Tensor,
      %p141 : Tensor,
      %p142 : Tensor,
      %p143 : Tensor,
      %p144 : Tensor,
      %p145 : Tensor,
      %p146 : Tensor,
      %p147 : Tensor,
      %p148 : Tensor,
      %p149 : Tensor,
      %p150 : Tensor,
      %p151 : Tensor,
      %p152 : Tensor,
      %p153 : Tensor,
      %p154 : Tensor,
      %p155 : Tensor,
      %p156 : Tensor,
      %p157 : Tensor,
      %p158 : Tensor,
      %p159 : Tensor,
      %p160 : Tensor,
      %p161 : Tensor,
      %p162 : Tensor,
      %p163 : Tensor,
      %p164 : Tensor,
      %p165 : Tensor,
      %p166 : Tensor,
      %p167 : Tensor,
      %p168 : Tensor,
      %p169 : Tensor,
      %p170 : Tensor,
      %p171 : Tensor,
      %p172 : Tensor,
      %p173 : Tensor,
      %p174 : Tensor,
      %p175 : Tensor,
      %p176 : Tensor,
      %p177 : Tensor,
      %p178 : Tensor,
      %p179 : Tensor,
      %p180 : Tensor,
      %p181 : Tensor,
      %p182 : Tensor,
      %p183 : Tensor,
      %p184 : Tensor,
      %p185 : Tensor,
      %p186 : Tensor,
      %p187 : Tensor,
      %p188 : Tensor,
      %p189 : Tensor,
      %p190 : Tensor,
      %p191 : Tensor,
      %p192 : Tensor,
      %p193 : Tensor,
      %p194 : Tensor,
      %p195 : Tensor,
      %p196 : Tensor,
      %p197 : Tensor,
      %p198 : Tensor,
      %p199 : Tensor,
      %p200 : Tensor,
      %p201 : Tensor,
      %p202 : Tensor,
      %p203 : Tensor,
      %p204 : Tensor,
      %p205 : Tensor,
      %p206 : Tensor,
      %p207 : Tensor,
      %p208 : Tensor,
      %p209 : Tensor,
      %p210 : Tensor):
  %211 : int[] = prim::Constant[value=[2]]()
  %212 : int[] = prim::Constant[value=[2]]()
  %213 : Tensor = aten::reshape(%p0, %212)
  %214 : int[] = prim::Constant[value=[1, 0]]()
  %215 : int[] = prim::Constant[value=[1, 0]]()
  %216 : Tensor = aten::permute(%p1, %215)
  %217 : Tensor = prim::Constant[value={214013}]()
  %218 : Tensor = aten::mul(%217, %p3)
  %219 : Tensor = prim::Constant[value={2531011}]()
  %220 : int = prim::Constant[value=1]()
  %221 : Tensor = aten::add(%219, %218, %220)
  %222 : Tensor = prim::Constant[value={214013}]()
  %223 : Tensor = aten::mul(%222, %221)
  %224 : Tensor = prim::Constant[value={2531011}]()
  %225 : int = prim::Constant[value=1]()
  %226 : Tensor = aten::add(%224, %223, %225)
  %227 : Tensor = prim::Constant[value={214013}]()
  %228 : Tensor = aten::mul(%227, %226)
  %229 : Tensor = prim::Constant[value={2531011}]()
  %230 : int = prim::Constant[value=1]()
  %231 : Tensor = aten::add(%229, %228, %230)
  %232 : Tensor = prim::Constant[value={214013}]()
  %233 : Tensor = aten::mul(%232, %231)
  %234 : Tensor = prim::Constant[value={2531011}]()
  %235 : int = prim::Constant[value=1]()
  %236 : Tensor = aten::add(%234, %233, %235)
  %237 : Tensor = prim::Constant[value={214013}]()
  %238 : Tensor = aten::mul(%237, %236)
  %239 : Tensor = prim::Constant[value={2531011}]()
  %240 : int = prim::Constant[value=1]()
  %241 : Tensor = aten::add(%239, %238, %240)
  %242 : Tensor = prim::Constant[value={214013}]()
  %243 : Tensor = aten::mul(%242, %241)
  %244 : Tensor = prim::Constant[value={2531011}]()
  %245 : int = prim::Constant[value=1]()
  %246 : Tensor = aten::add(%244, %243, %245)
  %247 : Tensor = prim::Constant[value={214013}]()
  %248 : Tensor = aten::mul(%247, %246)
  %249 : Tensor = prim::Constant[value={2531011}]()
  %250 : int = prim::Constant[value=1]()
  %251 : Tensor = aten::add(%249, %248, %250)
  %252 : Tensor = prim::Constant[value={214013}]()
  %253 : Tensor = aten::mul(%252, %251)
  %254 : Tensor = prim::Constant[value={2531011}]()
  %255 : int = prim::Constant[value=1]()
  %256 : Tensor = aten::add(%254, %253, %255)
  %257 : Tensor = prim::Constant[value={214013}]()
  %258 : Tensor = aten::mul(%257, %256)
  %259 : Tensor = prim::Constant[value={2531011}]()
  %260 : int = prim::Constant[value=1]()
  %261 : Tensor = aten::add(%259, %258, %260)
  %262 : Tensor = prim::Constant[value={214013}]()
  %263 : Tensor = aten::mul(%262, %261)
  %264 : Tensor = prim::Constant[value={2531011}]()
  %265 : int = prim::Constant[value=1]()
  %266 : Tensor = aten::add(%264, %263, %265)
  %267 : Tensor = prim::Constant[value={214013}]()
  %268 : Tensor = aten::mul(%267, %266)
  %269 : Tensor = prim::Constant[value={2531011}]()
  %270 : int = prim::Constant[value=1]()
  %271 : Tensor = aten::add(%269, %268, %270)
  %272 : Tensor = prim::Constant[value={214013}]()
  %273 : Tensor = aten::mul(%272, %271)
  %274 : Tensor = prim::Constant[value={2531011}]()
  %275 : int = prim::Constant[value=1]()
  %276 : Tensor = aten::add(%274, %273, %275)
  %277 : Tensor = prim::Constant[value={214013}]()
  %278 : Tensor = aten::mul(%277, %276)
  %279 : Tensor = prim::Constant[value={2531011}]()
  %280 : int = prim::Constant[value=1]()
  %281 : Tensor = aten::add(%279, %278, %280)
  %282 : Tensor = prim::Constant[value={214013}]()
  %283 : Tensor = aten::mul(%282, %281)
  %284 : Tensor = prim::Constant[value={2531011}]()
  %285 : int = prim::Constant[value=1]()
  %286 : Tensor = aten::add(%284, %283, %285)
  %287 : Tensor = prim::Constant[value={214013}]()
  %288 : Tensor = aten::mul(%287, %286)
  %289 : Tensor = prim::Constant[value={2531011}]()
  %290 : int = prim::Constant[value=1]()
  %291 : Tensor = aten::add(%289, %288, %290)
  %292 : Tensor = prim::Constant[value={214013}]()
  %293 : Tensor = aten::mul(%292, %291)
  %294 : Tensor = prim::Constant[value={2531011}]()
  %295 : int = prim::Constant[value=1]()
  %296 : Tensor = aten::add(%294, %293, %295)
  %297 : Tensor = prim::Constant[value={214013}]()
  %298 : Tensor = aten::mul(%297, %296)
  %299 : Tensor = prim::Constant[value={2531011}]()
  %300 : int = prim::Constant[value=1]()
  %301 : Tensor = aten::add(%299, %298, %300)
  %302 : Tensor = prim::Constant[value={214013}]()
  %303 : Tensor = aten::mul(%302, %301)
  %304 : Tensor = prim::Constant[value={2531011}]()
  %305 : int = prim::Constant[value=1]()
  %306 : Tensor = aten::add(%304, %303, %305)
  %307 : Tensor = prim::Constant[value={214013}]()
  %308 : Tensor = aten::mul(%307, %306)
  %309 : Tensor = prim::Constant[value={2531011}]()
  %310 : int = prim::Constant[value=1]()
  %311 : Tensor = aten::add(%309, %308, %310)
  %312 : Tensor = prim::Constant[value={214013}]()
  %313 : Tensor = aten::mul(%312, %311)
  %314 : Tensor = prim::Constant[value={2531011}]()
  %315 : int = prim::Constant[value=1]()
  %316 : Tensor = aten::add(%314, %313, %315)
  %317 : Tensor = prim::Constant[value={214013}]()
  %318 : Tensor = aten::mul(%317, %316)
  %319 : Tensor = prim::Constant[value={2531011}]()
  %320 : int = prim::Constant[value=1]()
  %321 : Tensor = aten::add(%319, %318, %320)
  %322 : Tensor = prim::Constant[value={214013}]()
  %323 : Tensor = aten::mul(%322, %321)
  %324 : Tensor = prim::Constant[value={2531011}]()
  %325 : int = prim::Constant[value=1]()
  %326 : Tensor = aten::add(%324, %323, %325)
  %327 : Tensor = prim::Constant[value={214013}]()
  %328 : Tensor = aten::mul(%327, %326)
  %329 : Tensor = prim::Constant[value={2531011}]()
  %330 : int = prim::Constant[value=1]()
  %331 : Tensor = aten::add(%329, %328, %330)
  %332 : Tensor = prim::Constant[value={214013}]()
  %333 : Tensor = aten::mul(%332, %331)
  %334 : Tensor = prim::Constant[value={2531011}]()
  %335 : int = prim::Constant[value=1]()
  %336 : Tensor = aten::add(%334, %333, %335)
  %337 : Tensor = prim::Constant[value={214013}]()
  %338 : Tensor = aten::mul(%337, %336)
  %339 : Tensor = prim::Constant[value={2531011}]()
  %340 : int = prim::Constant[value=1]()
  %341 : Tensor = aten::add(%339, %338, %340)
  %342 : Tensor = prim::Constant[value={214013}]()
  %343 : Tensor = aten::mul(%342, %341)
  %344 : Tensor = prim::Constant[value={2531011}]()
  %345 : int = prim::Constant[value=1]()
  %346 : Tensor = aten::add(%344, %343, %345)
  %347 : Tensor = prim::Constant[value={214013}]()
  %348 : Tensor = aten::mul(%347, %346)
  %349 : Tensor = prim::Constant[value={2531011}]()
  %350 : int = prim::Constant[value=1]()
  %351 : Tensor = aten::add(%349, %348, %350)
  %352 : Tensor = prim::Constant[value={214013}]()
  %353 : Tensor = aten::mul(%352, %351)
  %354 : Tensor = prim::Constant[value={2531011}]()
  %355 : int = prim::Constant[value=1]()
  %356 : Tensor = aten::add(%354, %353, %355)
  %357 : Tensor = prim::Constant[value={214013}]()
  %358 : Tensor = aten::mul(%357, %356)
  %359 : Tensor = prim::Constant[value={2531011}]()
  %360 : int = prim::Constant[value=1]()
  %361 : Tensor = aten::add(%359, %358, %360)
  %362 : Tensor = prim::Constant[value={214013}]()
  %363 : Tensor = aten::mul(%362, %361)
  %364 : Tensor = prim::Constant[value={2531011}]()
  %365 : int = prim::Constant[value=1]()
  %366 : Tensor = aten::add(%364, %363, %365)
  %367 : Tensor = prim::Constant[value={214013}]()
  %368 : Tensor = aten::mul(%367, %366)
  %369 : Tensor = prim::Constant[value={2531011}]()
  %370 : int = prim::Constant[value=1]()
  %371 : Tensor = aten::add(%369, %368, %370)
  %372 : Tensor = prim::Constant[value={214013}]()
  %373 : Tensor = aten::mul(%372, %371)
  %374 : Tensor = prim::Constant[value={2531011}]()
  %375 : int = prim::Constant[value=1]()
  %376 : Tensor = aten::add(%374, %373, %375)
  %377 : Tensor = prim::Constant[value={214013}]()
  %378 : Tensor = aten::mul(%377, %376)
  %379 : Tensor = prim::Constant[value={2531011}]()
  %380 : int = prim::Constant[value=1]()
  %381 : Tensor = aten::add(%379, %378, %380)
  %382 : Tensor = prim::Constant[value={214013}]()
  %383 : Tensor = aten::mul(%382, %381)
  %384 : Tensor = prim::Constant[value={2531011}]()
  %385 : int = prim::Constant[value=1]()
  %386 : Tensor = aten::add(%384, %383, %385)
  %387 : Tensor = prim::Constant[value={214013}]()
  %388 : Tensor = aten::mul(%387, %386)
  %389 : Tensor = prim::Constant[value={2531011}]()
  %390 : int = prim::Constant[value=1]()
  %391 : Tensor = aten::add(%389, %388, %390)
  %392 : Tensor = prim::Constant[value={214013}]()
  %393 : Tensor = aten::mul(%392, %391)
  %394 : Tensor = prim::Constant[value={2531011}]()
  %395 : int = prim::Constant[value=1]()
  %396 : Tensor = aten::add(%394, %393, %395)
  %397 : Tensor = prim::Constant[value={214013}]()
  %398 : Tensor = aten::mul(%397, %396)
  %399 : Tensor = prim::Constant[value={2531011}]()
  %400 : int = prim::Constant[value=1]()
  %401 : Tensor = aten::add(%399, %398, %400)
  %402 : Tensor = prim::Constant[value={214013}]()
  %403 : Tensor = aten::mul(%402, %401)
  %404 : Tensor = prim::Constant[value={2531011}]()
  %405 : int = prim::Constant[value=1]()
  %406 : Tensor = aten::add(%404, %403, %405)
  %407 : int[] = prim::Constant[value=[2, 768]]()
  %408 : int[] = prim::Constant[value=[2, 768]]()
  %409 : bool = prim::Constant[value=0]()
  %410 : Tensor = aten::expand(%p4, %408, %409)
  %411 : NoneType = prim::Constant()
  %412 : Tensor = aten::clone(%410, %411)
  %413 : NoneType = prim::Constant()
  %414 : Tensor = aten::bernoulli(%412, %413)
  %415 : Tensor = aten::div(%414, %p2)
  %416 : int[] = prim::Constant[value=[1, 0]]()
  %417 : int[] = prim::Constant[value=[1, 0]]()
  %418 : Tensor = aten::permute(%p5, %417)
  %419 : int[] = prim::Constant[value=[2, 512, 768]]()
  %420 : int[] = prim::Constant[value=[2, 512, 768]]()
  %421 : bool = prim::Constant[value=0]()
  %422 : Tensor = aten::expand(%p4, %420, %421)
  %423 : NoneType = prim::Constant()
  %424 : Tensor = aten::clone(%422, %423)
  %425 : NoneType = prim::Constant()
  %426 : Tensor = aten::bernoulli(%424, %425)
  %427 : Tensor = aten::div(%426, %p2)
  %428 : int = prim::Constant[value=0]()
  %429 : int = prim::Constant[value=0]()
  %430 : int = prim::Constant[value=1]()
  %431 : int = prim::Constant[value=1]()
  %432 : Tensor = aten::slice(%p56, %428, %429, %430, %431)
  %433 : int[] = prim::Constant[value=[512]]()
  %434 : int[] = prim::Constant[value=[512]]()
  %435 : Tensor = aten::reshape(%432, %434)
  %436 : int = prim::Constant[value=0]()
  %437 : Tensor = aten::index_select(%p57, %436, %435)
  %438 : int[] = prim::Constant[value=[1, 512, 768]]()
  %439 : int[] = prim::Constant[value=[1, 512, 768]]()
  %440 : Tensor = aten::reshape(%437, %439)
  %441 : int[] = prim::Constant[value=[1024]]()
  %442 : int[] = prim::Constant[value=[1024]]()
  %443 : Tensor = aten::reshape(%p58, %442)
  %444 : int = prim::Constant[value=0]()
  %445 : Tensor = aten::index_select(%p59, %444, %443)
  %446 : int[] = prim::Constant[value=[2, 512, 768]]()
  %447 : int[] = prim::Constant[value=[2, 512, 768]]()
  %448 : Tensor = aten::reshape(%445, %447)
  %449 : int[] = prim::Constant[value=[1024]]()
  %450 : int[] = prim::Constant[value=[1024]]()
  %451 : Tensor = aten::reshape(%p60, %450)
  %452 : int = prim::Constant[value=0]()
  %453 : Tensor = aten::index_select(%p61, %452, %451)
  %454 : int[] = prim::Constant[value=[2, 512, 768]]()
  %455 : int[] = prim::Constant[value=[2, 512, 768]]()
  %456 : Tensor = aten::reshape(%453, %455)
  %457 : int = prim::Constant[value=1]()
  %458 : Tensor = aten::add(%456, %448, %457)
  %459 : int = prim::Constant[value=1]()
  %460 : Tensor = aten::add(%458, %440, %459)
  %461 : int[] = prim::Constant[value=[768]]()
  %462 : float = prim::Constant[value=9.9999999999999998e-13]()
  %463 : Tensor, %464 : Tensor, %465 : Tensor = aten::native_layer_norm(%460, %461, %p55, %p54, %462)
  %466 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%463, %464, %465)
  %467 : Tensor = aten::mul(%463, %427)
  %468 : int[] = prim::Constant[value=[2, 512, 768]]()
  %469 : int[] = prim::Constant[value=[2, 512, 768]]()
  %470 : bool = prim::Constant[value=0]()
  %471 : Tensor = aten::expand(%p4, %469, %470)
  %472 : NoneType = prim::Constant()
  %473 : Tensor = aten::clone(%471, %472)
  %474 : NoneType = prim::Constant()
  %475 : Tensor = aten::bernoulli(%473, %474)
  %476 : Tensor = aten::div(%475, %p2)
  %477 : int[] = prim::Constant[value=[1, 0]]()
  %478 : int[] = prim::Constant[value=[1, 0]]()
  %479 : Tensor = aten::permute(%p63, %478)
  %480 : int[] = prim::Constant[value=[1, 0]]()
  %481 : int[] = prim::Constant[value=[1, 0]]()
  %482 : Tensor = aten::permute(%p65, %481)
  %483 : int[] = prim::Constant[value=[1024, 768]]()
  %484 : int[] = prim::Constant[value=[1024, 768]]()
  %485 : Tensor = aten::reshape(%467, %484)
  %486 : Tensor = aten::mm(%485, %482)
  %487 : int[] = prim::Constant[value=[2, 512, 768]]()
  %488 : int[] = prim::Constant[value=[2, 512, 768]]()
  %489 : Tensor = aten::reshape(%486, %488)
  %490 : int = prim::Constant[value=1]()
  %491 : Tensor = aten::add(%489, %p64, %490)
  %492 : int[] = prim::Constant[value=[1024, 768]]()
  %493 : int[] = prim::Constant[value=[1024, 768]]()
  %494 : Tensor = aten::reshape(%491, %493)
  %495 : int[] = prim::Constant[value=[2, 512, 768]]()
  %496 : int[] = prim::Constant[value=[2, 512, 768]]()
  %497 : Tensor = aten::reshape(%494, %496)
  %498 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %499 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %500 : Tensor = aten::reshape(%497, %499)
  %501 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %502 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %503 : Tensor = aten::permute(%500, %502)
  %504 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %505 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %506 : bool = prim::Constant[value=0]()
  %507 : Tensor = aten::expand(%503, %505, %506)
  %508 : int[] = prim::Constant[value=[24, 512, 64]]()
  %509 : int[] = prim::Constant[value=[24, 512, 64]]()
  %510 : Tensor = aten::reshape(%507, %509)
  %511 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %512 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %513 : bool = prim::Constant[value=0]()
  %514 : Tensor = aten::expand(%p4, %512, %513)
  %515 : NoneType = prim::Constant()
  %516 : Tensor = aten::clone(%514, %515)
  %517 : NoneType = prim::Constant()
  %518 : Tensor = aten::bernoulli(%516, %517)
  %519 : Tensor = aten::div(%518, %p2)
  %520 : Tensor = prim::Constant[value={1}]()
  %521 : int[] = prim::Constant[value=[2, 1, 1, 512]]()
  %522 : int[] = prim::Constant[value=[2, 1, 1, 512]]()
  %523 : bool = prim::Constant[value=0]()
  %524 : Tensor = aten::expand(%520, %522, %523)
  %525 : NoneType = prim::Constant()
  %526 : Tensor = aten::clone(%524, %525)
  %527 : Tensor = aten::mul(%p67, %526)
  %528 : Tensor = prim::Constant[value={1}]()
  %529 : int = prim::Constant[value=1]()
  %530 : Tensor = aten::sub(%528, %527, %529)
  %531 : Tensor = aten::mul(%530, %p66)
  %532 : int[] = prim::Constant[value=[1, 0]]()
  %533 : int[] = prim::Constant[value=[1, 0]]()
  %534 : Tensor = aten::permute(%p70, %533)
  %535 : int[] = prim::Constant[value=[1024, 768]]()
  %536 : int[] = prim::Constant[value=[1024, 768]]()
  %537 : Tensor = aten::reshape(%467, %536)
  %538 : Tensor = aten::mm(%537, %534)
  %539 : int[] = prim::Constant[value=[2, 512, 768]]()
  %540 : int[] = prim::Constant[value=[2, 512, 768]]()
  %541 : Tensor = aten::reshape(%538, %540)
  %542 : int = prim::Constant[value=1]()
  %543 : Tensor = aten::add(%541, %p69, %542)
  %544 : int[] = prim::Constant[value=[1024, 768]]()
  %545 : int[] = prim::Constant[value=[1024, 768]]()
  %546 : Tensor = aten::reshape(%543, %545)
  %547 : int[] = prim::Constant[value=[2, 512, 768]]()
  %548 : int[] = prim::Constant[value=[2, 512, 768]]()
  %549 : Tensor = aten::reshape(%546, %548)
  %550 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %551 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %552 : Tensor = aten::reshape(%549, %551)
  %553 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %554 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %555 : Tensor = aten::permute(%552, %554)
  %556 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %557 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %558 : Tensor = aten::permute(%555, %557)
  %559 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %560 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %561 : bool = prim::Constant[value=0]()
  %562 : Tensor = aten::expand(%558, %560, %561)
  %563 : int[] = prim::Constant[value=[24, 64, 512]]()
  %564 : int[] = prim::Constant[value=[24, 64, 512]]()
  %565 : Tensor = aten::reshape(%562, %564)
  %566 : int[] = prim::Constant[value=[1, 0]]()
  %567 : int[] = prim::Constant[value=[1, 0]]()
  %568 : Tensor = aten::permute(%p72, %567)
  %569 : int[] = prim::Constant[value=[1024, 768]]()
  %570 : int[] = prim::Constant[value=[1024, 768]]()
  %571 : Tensor = aten::reshape(%467, %570)
  %572 : Tensor = aten::mm(%571, %568)
  %573 : int[] = prim::Constant[value=[2, 512, 768]]()
  %574 : int[] = prim::Constant[value=[2, 512, 768]]()
  %575 : Tensor = aten::reshape(%572, %574)
  %576 : int = prim::Constant[value=1]()
  %577 : Tensor = aten::add(%575, %p71, %576)
  %578 : int[] = prim::Constant[value=[1024, 768]]()
  %579 : int[] = prim::Constant[value=[1024, 768]]()
  %580 : Tensor = aten::reshape(%577, %579)
  %581 : int[] = prim::Constant[value=[2, 512, 768]]()
  %582 : int[] = prim::Constant[value=[2, 512, 768]]()
  %583 : Tensor = aten::reshape(%580, %582)
  %584 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %585 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %586 : Tensor = aten::reshape(%583, %585)
  %587 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %588 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %589 : Tensor = aten::permute(%586, %588)
  %590 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %591 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %592 : bool = prim::Constant[value=0]()
  %593 : Tensor = aten::expand(%589, %591, %592)
  %594 : int[] = prim::Constant[value=[24, 512, 64]]()
  %595 : int[] = prim::Constant[value=[24, 512, 64]]()
  %596 : Tensor = aten::reshape(%593, %595)
  %597 : Tensor = aten::bmm(%596, %565)
  %598 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %599 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %600 : Tensor = aten::reshape(%597, %599)
  %601 : Tensor = aten::div(%600, %p68)
  %602 : int = prim::Constant[value=1]()
  %603 : Tensor = aten::add(%601, %531, %602)
  %604 : int = prim::Constant[value=-1]()
  %605 : bool = prim::Constant[value=0]()
  %606 : Tensor = aten::_softmax(%603, %604, %605)
  %607 : Tensor = aten::mul(%606, %519)
  %608 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %609 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %610 : bool = prim::Constant[value=0]()
  %611 : Tensor = aten::expand(%607, %609, %610)
  %612 : int[] = prim::Constant[value=[24, 512, 512]]()
  %613 : int[] = prim::Constant[value=[24, 512, 512]]()
  %614 : Tensor = aten::reshape(%611, %613)
  %615 : Tensor = aten::bmm(%614, %510)
  %616 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %617 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %618 : Tensor = aten::reshape(%615, %617)
  %619 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %620 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %621 : Tensor = aten::permute(%618, %620)
  %622 : int[] = prim::Constant[value=[2, 512, 768]]()
  %623 : int[] = prim::Constant[value=[2, 512, 768]]()
  %624 : Tensor = aten::reshape(%621, %623)
  %625 : int[] = prim::Constant[value=[1024, 768]]()
  %626 : int[] = prim::Constant[value=[1024, 768]]()
  %627 : Tensor = aten::reshape(%624, %626)
  %628 : Tensor = aten::mm(%627, %479)
  %629 : int[] = prim::Constant[value=[2, 512, 768]]()
  %630 : int[] = prim::Constant[value=[2, 512, 768]]()
  %631 : Tensor = aten::reshape(%628, %630)
  %632 : int = prim::Constant[value=1]()
  %633 : Tensor = aten::add(%631, %p62, %632)
  %634 : int[] = prim::Constant[value=[1024, 768]]()
  %635 : int[] = prim::Constant[value=[1024, 768]]()
  %636 : Tensor = aten::reshape(%633, %635)
  %637 : int[] = prim::Constant[value=[2, 512, 768]]()
  %638 : int[] = prim::Constant[value=[2, 512, 768]]()
  %639 : Tensor = aten::reshape(%636, %638)
  %640 : Tensor = aten::mul(%639, %476)
  %641 : int = prim::Constant[value=1]()
  %642 : Tensor = aten::add(%640, %467, %641)
  %643 : int[] = prim::Constant[value=[768]]()
  %644 : float = prim::Constant[value=9.9999999999999998e-13]()
  %645 : Tensor, %646 : Tensor, %647 : Tensor = aten::native_layer_norm(%642, %643, %p53, %p52, %644)
  %648 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%645, %646, %647)
  %649 : int[] = prim::Constant[value=[2, 512, 768]]()
  %650 : int[] = prim::Constant[value=[2, 512, 768]]()
  %651 : bool = prim::Constant[value=0]()
  %652 : Tensor = aten::expand(%p4, %650, %651)
  %653 : NoneType = prim::Constant()
  %654 : Tensor = aten::clone(%652, %653)
  %655 : NoneType = prim::Constant()
  %656 : Tensor = aten::bernoulli(%654, %655)
  %657 : Tensor = aten::div(%656, %p2)
  %658 : int[] = prim::Constant[value=[1, 0]]()
  %659 : int[] = prim::Constant[value=[1, 0]]()
  %660 : Tensor = aten::permute(%p74, %659)
  %661 : int[] = prim::Constant[value=[1, 0]]()
  %662 : int[] = prim::Constant[value=[1, 0]]()
  %663 : Tensor = aten::permute(%p76, %662)
  %664 : int[] = prim::Constant[value=[1024, 768]]()
  %665 : int[] = prim::Constant[value=[1024, 768]]()
  %666 : Tensor = aten::reshape(%645, %665)
  %667 : Tensor = aten::mm(%666, %663)
  %668 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %669 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %670 : Tensor = aten::reshape(%667, %669)
  %671 : int = prim::Constant[value=1]()
  %672 : Tensor = aten::add(%670, %p75, %671)
  %673 : int[] = prim::Constant[value=[1024, 3072]]()
  %674 : int[] = prim::Constant[value=[1024, 3072]]()
  %675 : Tensor = aten::reshape(%672, %674)
  %676 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %677 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %678 : Tensor = aten::reshape(%675, %677)
  %679 : Tensor = aten::gelu(%678)
  %680 : int[] = prim::Constant[value=[1024, 3072]]()
  %681 : int[] = prim::Constant[value=[1024, 3072]]()
  %682 : Tensor = aten::reshape(%679, %681)
  %683 : Tensor = aten::mm(%682, %660)
  %684 : int[] = prim::Constant[value=[2, 512, 768]]()
  %685 : int[] = prim::Constant[value=[2, 512, 768]]()
  %686 : Tensor = aten::reshape(%683, %685)
  %687 : int = prim::Constant[value=1]()
  %688 : Tensor = aten::add(%686, %p73, %687)
  %689 : int[] = prim::Constant[value=[1024, 768]]()
  %690 : int[] = prim::Constant[value=[1024, 768]]()
  %691 : Tensor = aten::reshape(%688, %690)
  %692 : int[] = prim::Constant[value=[2, 512, 768]]()
  %693 : int[] = prim::Constant[value=[2, 512, 768]]()
  %694 : Tensor = aten::reshape(%691, %693)
  %695 : Tensor = aten::mul(%694, %657)
  %696 : int = prim::Constant[value=1]()
  %697 : Tensor = aten::add(%695, %645, %696)
  %698 : int[] = prim::Constant[value=[768]]()
  %699 : float = prim::Constant[value=9.9999999999999998e-13]()
  %700 : Tensor, %701 : Tensor, %702 : Tensor = aten::native_layer_norm(%697, %698, %p51, %p50, %699)
  %703 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%700, %701, %702)
  %704 : int[] = prim::Constant[value=[2, 512, 768]]()
  %705 : int[] = prim::Constant[value=[2, 512, 768]]()
  %706 : bool = prim::Constant[value=0]()
  %707 : Tensor = aten::expand(%p4, %705, %706)
  %708 : NoneType = prim::Constant()
  %709 : Tensor = aten::clone(%707, %708)
  %710 : NoneType = prim::Constant()
  %711 : Tensor = aten::bernoulli(%709, %710)
  %712 : Tensor = aten::div(%711, %p2)
  %713 : int[] = prim::Constant[value=[1, 0]]()
  %714 : int[] = prim::Constant[value=[1, 0]]()
  %715 : Tensor = aten::permute(%p78, %714)
  %716 : int[] = prim::Constant[value=[1, 0]]()
  %717 : int[] = prim::Constant[value=[1, 0]]()
  %718 : Tensor = aten::permute(%p80, %717)
  %719 : int[] = prim::Constant[value=[1024, 768]]()
  %720 : int[] = prim::Constant[value=[1024, 768]]()
  %721 : Tensor = aten::reshape(%700, %720)
  %722 : Tensor = aten::mm(%721, %718)
  %723 : int[] = prim::Constant[value=[2, 512, 768]]()
  %724 : int[] = prim::Constant[value=[2, 512, 768]]()
  %725 : Tensor = aten::reshape(%722, %724)
  %726 : int = prim::Constant[value=1]()
  %727 : Tensor = aten::add(%725, %p79, %726)
  %728 : int[] = prim::Constant[value=[1024, 768]]()
  %729 : int[] = prim::Constant[value=[1024, 768]]()
  %730 : Tensor = aten::reshape(%727, %729)
  %731 : int[] = prim::Constant[value=[2, 512, 768]]()
  %732 : int[] = prim::Constant[value=[2, 512, 768]]()
  %733 : Tensor = aten::reshape(%730, %732)
  %734 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %735 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %736 : Tensor = aten::reshape(%733, %735)
  %737 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %738 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %739 : Tensor = aten::permute(%736, %738)
  %740 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %741 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %742 : bool = prim::Constant[value=0]()
  %743 : Tensor = aten::expand(%739, %741, %742)
  %744 : int[] = prim::Constant[value=[24, 512, 64]]()
  %745 : int[] = prim::Constant[value=[24, 512, 64]]()
  %746 : Tensor = aten::reshape(%743, %745)
  %747 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %748 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %749 : bool = prim::Constant[value=0]()
  %750 : Tensor = aten::expand(%p4, %748, %749)
  %751 : NoneType = prim::Constant()
  %752 : Tensor = aten::clone(%750, %751)
  %753 : NoneType = prim::Constant()
  %754 : Tensor = aten::bernoulli(%752, %753)
  %755 : Tensor = aten::div(%754, %p2)
  %756 : int[] = prim::Constant[value=[1, 0]]()
  %757 : int[] = prim::Constant[value=[1, 0]]()
  %758 : Tensor = aten::permute(%p82, %757)
  %759 : int[] = prim::Constant[value=[1024, 768]]()
  %760 : int[] = prim::Constant[value=[1024, 768]]()
  %761 : Tensor = aten::reshape(%700, %760)
  %762 : Tensor = aten::mm(%761, %758)
  %763 : int[] = prim::Constant[value=[2, 512, 768]]()
  %764 : int[] = prim::Constant[value=[2, 512, 768]]()
  %765 : Tensor = aten::reshape(%762, %764)
  %766 : int = prim::Constant[value=1]()
  %767 : Tensor = aten::add(%765, %p81, %766)
  %768 : int[] = prim::Constant[value=[1024, 768]]()
  %769 : int[] = prim::Constant[value=[1024, 768]]()
  %770 : Tensor = aten::reshape(%767, %769)
  %771 : int[] = prim::Constant[value=[2, 512, 768]]()
  %772 : int[] = prim::Constant[value=[2, 512, 768]]()
  %773 : Tensor = aten::reshape(%770, %772)
  %774 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %775 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %776 : Tensor = aten::reshape(%773, %775)
  %777 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %778 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %779 : Tensor = aten::permute(%776, %778)
  %780 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %781 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %782 : Tensor = aten::permute(%779, %781)
  %783 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %784 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %785 : bool = prim::Constant[value=0]()
  %786 : Tensor = aten::expand(%782, %784, %785)
  %787 : int[] = prim::Constant[value=[24, 64, 512]]()
  %788 : int[] = prim::Constant[value=[24, 64, 512]]()
  %789 : Tensor = aten::reshape(%786, %788)
  %790 : int[] = prim::Constant[value=[1, 0]]()
  %791 : int[] = prim::Constant[value=[1, 0]]()
  %792 : Tensor = aten::permute(%p84, %791)
  %793 : int[] = prim::Constant[value=[1024, 768]]()
  %794 : int[] = prim::Constant[value=[1024, 768]]()
  %795 : Tensor = aten::reshape(%700, %794)
  %796 : Tensor = aten::mm(%795, %792)
  %797 : int[] = prim::Constant[value=[2, 512, 768]]()
  %798 : int[] = prim::Constant[value=[2, 512, 768]]()
  %799 : Tensor = aten::reshape(%796, %798)
  %800 : int = prim::Constant[value=1]()
  %801 : Tensor = aten::add(%799, %p83, %800)
  %802 : int[] = prim::Constant[value=[1024, 768]]()
  %803 : int[] = prim::Constant[value=[1024, 768]]()
  %804 : Tensor = aten::reshape(%801, %803)
  %805 : int[] = prim::Constant[value=[2, 512, 768]]()
  %806 : int[] = prim::Constant[value=[2, 512, 768]]()
  %807 : Tensor = aten::reshape(%804, %806)
  %808 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %809 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %810 : Tensor = aten::reshape(%807, %809)
  %811 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %812 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %813 : Tensor = aten::permute(%810, %812)
  %814 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %815 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %816 : bool = prim::Constant[value=0]()
  %817 : Tensor = aten::expand(%813, %815, %816)
  %818 : int[] = prim::Constant[value=[24, 512, 64]]()
  %819 : int[] = prim::Constant[value=[24, 512, 64]]()
  %820 : Tensor = aten::reshape(%817, %819)
  %821 : Tensor = aten::bmm(%820, %789)
  %822 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %823 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %824 : Tensor = aten::reshape(%821, %823)
  %825 : Tensor = aten::div(%824, %p68)
  %826 : int = prim::Constant[value=1]()
  %827 : Tensor = aten::add(%825, %531, %826)
  %828 : int = prim::Constant[value=-1]()
  %829 : bool = prim::Constant[value=0]()
  %830 : Tensor = aten::_softmax(%827, %828, %829)
  %831 : Tensor = aten::mul(%830, %755)
  %832 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %833 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %834 : bool = prim::Constant[value=0]()
  %835 : Tensor = aten::expand(%831, %833, %834)
  %836 : int[] = prim::Constant[value=[24, 512, 512]]()
  %837 : int[] = prim::Constant[value=[24, 512, 512]]()
  %838 : Tensor = aten::reshape(%835, %837)
  %839 : Tensor = aten::bmm(%838, %746)
  %840 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %841 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %842 : Tensor = aten::reshape(%839, %841)
  %843 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %844 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %845 : Tensor = aten::permute(%842, %844)
  %846 : int[] = prim::Constant[value=[2, 512, 768]]()
  %847 : int[] = prim::Constant[value=[2, 512, 768]]()
  %848 : Tensor = aten::reshape(%845, %847)
  %849 : int[] = prim::Constant[value=[1024, 768]]()
  %850 : int[] = prim::Constant[value=[1024, 768]]()
  %851 : Tensor = aten::reshape(%848, %850)
  %852 : Tensor = aten::mm(%851, %715)
  %853 : int[] = prim::Constant[value=[2, 512, 768]]()
  %854 : int[] = prim::Constant[value=[2, 512, 768]]()
  %855 : Tensor = aten::reshape(%852, %854)
  %856 : int = prim::Constant[value=1]()
  %857 : Tensor = aten::add(%855, %p77, %856)
  %858 : int[] = prim::Constant[value=[1024, 768]]()
  %859 : int[] = prim::Constant[value=[1024, 768]]()
  %860 : Tensor = aten::reshape(%857, %859)
  %861 : int[] = prim::Constant[value=[2, 512, 768]]()
  %862 : int[] = prim::Constant[value=[2, 512, 768]]()
  %863 : Tensor = aten::reshape(%860, %862)
  %864 : Tensor = aten::mul(%863, %712)
  %865 : int = prim::Constant[value=1]()
  %866 : Tensor = aten::add(%864, %700, %865)
  %867 : int[] = prim::Constant[value=[768]]()
  %868 : float = prim::Constant[value=9.9999999999999998e-13]()
  %869 : Tensor, %870 : Tensor, %871 : Tensor = aten::native_layer_norm(%866, %867, %p49, %p48, %868)
  %872 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%869, %870, %871)
  %873 : int[] = prim::Constant[value=[2, 512, 768]]()
  %874 : int[] = prim::Constant[value=[2, 512, 768]]()
  %875 : bool = prim::Constant[value=0]()
  %876 : Tensor = aten::expand(%p4, %874, %875)
  %877 : NoneType = prim::Constant()
  %878 : Tensor = aten::clone(%876, %877)
  %879 : NoneType = prim::Constant()
  %880 : Tensor = aten::bernoulli(%878, %879)
  %881 : Tensor = aten::div(%880, %p2)
  %882 : int[] = prim::Constant[value=[1, 0]]()
  %883 : int[] = prim::Constant[value=[1, 0]]()
  %884 : Tensor = aten::permute(%p86, %883)
  %885 : int[] = prim::Constant[value=[1, 0]]()
  %886 : int[] = prim::Constant[value=[1, 0]]()
  %887 : Tensor = aten::permute(%p88, %886)
  %888 : int[] = prim::Constant[value=[1024, 768]]()
  %889 : int[] = prim::Constant[value=[1024, 768]]()
  %890 : Tensor = aten::reshape(%869, %889)
  %891 : Tensor = aten::mm(%890, %887)
  %892 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %893 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %894 : Tensor = aten::reshape(%891, %893)
  %895 : int = prim::Constant[value=1]()
  %896 : Tensor = aten::add(%894, %p87, %895)
  %897 : int[] = prim::Constant[value=[1024, 3072]]()
  %898 : int[] = prim::Constant[value=[1024, 3072]]()
  %899 : Tensor = aten::reshape(%896, %898)
  %900 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %901 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %902 : Tensor = aten::reshape(%899, %901)
  %903 : Tensor = aten::gelu(%902)
  %904 : int[] = prim::Constant[value=[1024, 3072]]()
  %905 : int[] = prim::Constant[value=[1024, 3072]]()
  %906 : Tensor = aten::reshape(%903, %905)
  %907 : Tensor = aten::mm(%906, %884)
  %908 : int[] = prim::Constant[value=[2, 512, 768]]()
  %909 : int[] = prim::Constant[value=[2, 512, 768]]()
  %910 : Tensor = aten::reshape(%907, %909)
  %911 : int = prim::Constant[value=1]()
  %912 : Tensor = aten::add(%910, %p85, %911)
  %913 : int[] = prim::Constant[value=[1024, 768]]()
  %914 : int[] = prim::Constant[value=[1024, 768]]()
  %915 : Tensor = aten::reshape(%912, %914)
  %916 : int[] = prim::Constant[value=[2, 512, 768]]()
  %917 : int[] = prim::Constant[value=[2, 512, 768]]()
  %918 : Tensor = aten::reshape(%915, %917)
  %919 : Tensor = aten::mul(%918, %881)
  %920 : int = prim::Constant[value=1]()
  %921 : Tensor = aten::add(%919, %869, %920)
  %922 : int[] = prim::Constant[value=[768]]()
  %923 : float = prim::Constant[value=9.9999999999999998e-13]()
  %924 : Tensor, %925 : Tensor, %926 : Tensor = aten::native_layer_norm(%921, %922, %p47, %p46, %923)
  %927 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%924, %925, %926)
  %928 : int[] = prim::Constant[value=[2, 512, 768]]()
  %929 : int[] = prim::Constant[value=[2, 512, 768]]()
  %930 : bool = prim::Constant[value=0]()
  %931 : Tensor = aten::expand(%p4, %929, %930)
  %932 : NoneType = prim::Constant()
  %933 : Tensor = aten::clone(%931, %932)
  %934 : NoneType = prim::Constant()
  %935 : Tensor = aten::bernoulli(%933, %934)
  %936 : Tensor = aten::div(%935, %p2)
  %937 : int[] = prim::Constant[value=[1, 0]]()
  %938 : int[] = prim::Constant[value=[1, 0]]()
  %939 : Tensor = aten::permute(%p90, %938)
  %940 : int[] = prim::Constant[value=[1, 0]]()
  %941 : int[] = prim::Constant[value=[1, 0]]()
  %942 : Tensor = aten::permute(%p92, %941)
  %943 : int[] = prim::Constant[value=[1024, 768]]()
  %944 : int[] = prim::Constant[value=[1024, 768]]()
  %945 : Tensor = aten::reshape(%924, %944)
  %946 : Tensor = aten::mm(%945, %942)
  %947 : int[] = prim::Constant[value=[2, 512, 768]]()
  %948 : int[] = prim::Constant[value=[2, 512, 768]]()
  %949 : Tensor = aten::reshape(%946, %948)
  %950 : int = prim::Constant[value=1]()
  %951 : Tensor = aten::add(%949, %p91, %950)
  %952 : int[] = prim::Constant[value=[1024, 768]]()
  %953 : int[] = prim::Constant[value=[1024, 768]]()
  %954 : Tensor = aten::reshape(%951, %953)
  %955 : int[] = prim::Constant[value=[2, 512, 768]]()
  %956 : int[] = prim::Constant[value=[2, 512, 768]]()
  %957 : Tensor = aten::reshape(%954, %956)
  %958 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %959 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %960 : Tensor = aten::reshape(%957, %959)
  %961 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %962 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %963 : Tensor = aten::permute(%960, %962)
  %964 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %965 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %966 : bool = prim::Constant[value=0]()
  %967 : Tensor = aten::expand(%963, %965, %966)
  %968 : int[] = prim::Constant[value=[24, 512, 64]]()
  %969 : int[] = prim::Constant[value=[24, 512, 64]]()
  %970 : Tensor = aten::reshape(%967, %969)
  %971 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %972 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %973 : bool = prim::Constant[value=0]()
  %974 : Tensor = aten::expand(%p4, %972, %973)
  %975 : NoneType = prim::Constant()
  %976 : Tensor = aten::clone(%974, %975)
  %977 : NoneType = prim::Constant()
  %978 : Tensor = aten::bernoulli(%976, %977)
  %979 : Tensor = aten::div(%978, %p2)
  %980 : int[] = prim::Constant[value=[1, 0]]()
  %981 : int[] = prim::Constant[value=[1, 0]]()
  %982 : Tensor = aten::permute(%p94, %981)
  %983 : int[] = prim::Constant[value=[1024, 768]]()
  %984 : int[] = prim::Constant[value=[1024, 768]]()
  %985 : Tensor = aten::reshape(%924, %984)
  %986 : Tensor = aten::mm(%985, %982)
  %987 : int[] = prim::Constant[value=[2, 512, 768]]()
  %988 : int[] = prim::Constant[value=[2, 512, 768]]()
  %989 : Tensor = aten::reshape(%986, %988)
  %990 : int = prim::Constant[value=1]()
  %991 : Tensor = aten::add(%989, %p93, %990)
  %992 : int[] = prim::Constant[value=[1024, 768]]()
  %993 : int[] = prim::Constant[value=[1024, 768]]()
  %994 : Tensor = aten::reshape(%991, %993)
  %995 : int[] = prim::Constant[value=[2, 512, 768]]()
  %996 : int[] = prim::Constant[value=[2, 512, 768]]()
  %997 : Tensor = aten::reshape(%994, %996)
  %998 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %999 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1000 : Tensor = aten::reshape(%997, %999)
  %1001 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1002 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1003 : Tensor = aten::permute(%1000, %1002)
  %1004 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1005 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1006 : Tensor = aten::permute(%1003, %1005)
  %1007 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1008 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1009 : bool = prim::Constant[value=0]()
  %1010 : Tensor = aten::expand(%1006, %1008, %1009)
  %1011 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1012 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1013 : Tensor = aten::reshape(%1010, %1012)
  %1014 : int[] = prim::Constant[value=[1, 0]]()
  %1015 : int[] = prim::Constant[value=[1, 0]]()
  %1016 : Tensor = aten::permute(%p96, %1015)
  %1017 : int[] = prim::Constant[value=[1024, 768]]()
  %1018 : int[] = prim::Constant[value=[1024, 768]]()
  %1019 : Tensor = aten::reshape(%924, %1018)
  %1020 : Tensor = aten::mm(%1019, %1016)
  %1021 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1022 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1023 : Tensor = aten::reshape(%1020, %1022)
  %1024 : int = prim::Constant[value=1]()
  %1025 : Tensor = aten::add(%1023, %p95, %1024)
  %1026 : int[] = prim::Constant[value=[1024, 768]]()
  %1027 : int[] = prim::Constant[value=[1024, 768]]()
  %1028 : Tensor = aten::reshape(%1025, %1027)
  %1029 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1030 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1031 : Tensor = aten::reshape(%1028, %1030)
  %1032 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1033 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1034 : Tensor = aten::reshape(%1031, %1033)
  %1035 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1036 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1037 : Tensor = aten::permute(%1034, %1036)
  %1038 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1039 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1040 : bool = prim::Constant[value=0]()
  %1041 : Tensor = aten::expand(%1037, %1039, %1040)
  %1042 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1043 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1044 : Tensor = aten::reshape(%1041, %1043)
  %1045 : Tensor = aten::bmm(%1044, %1013)
  %1046 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1047 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1048 : Tensor = aten::reshape(%1045, %1047)
  %1049 : Tensor = aten::div(%1048, %p68)
  %1050 : int = prim::Constant[value=1]()
  %1051 : Tensor = aten::add(%1049, %531, %1050)
  %1052 : int = prim::Constant[value=-1]()
  %1053 : bool = prim::Constant[value=0]()
  %1054 : Tensor = aten::_softmax(%1051, %1052, %1053)
  %1055 : Tensor = aten::mul(%1054, %979)
  %1056 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1057 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1058 : bool = prim::Constant[value=0]()
  %1059 : Tensor = aten::expand(%1055, %1057, %1058)
  %1060 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1061 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1062 : Tensor = aten::reshape(%1059, %1061)
  %1063 : Tensor = aten::bmm(%1062, %970)
  %1064 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1065 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1066 : Tensor = aten::reshape(%1063, %1065)
  %1067 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1068 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1069 : Tensor = aten::permute(%1066, %1068)
  %1070 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1071 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1072 : Tensor = aten::reshape(%1069, %1071)
  %1073 : int[] = prim::Constant[value=[1024, 768]]()
  %1074 : int[] = prim::Constant[value=[1024, 768]]()
  %1075 : Tensor = aten::reshape(%1072, %1074)
  %1076 : Tensor = aten::mm(%1075, %939)
  %1077 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1078 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1079 : Tensor = aten::reshape(%1076, %1078)
  %1080 : int = prim::Constant[value=1]()
  %1081 : Tensor = aten::add(%1079, %p89, %1080)
  %1082 : int[] = prim::Constant[value=[1024, 768]]()
  %1083 : int[] = prim::Constant[value=[1024, 768]]()
  %1084 : Tensor = aten::reshape(%1081, %1083)
  %1085 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1086 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1087 : Tensor = aten::reshape(%1084, %1086)
  %1088 : Tensor = aten::mul(%1087, %936)
  %1089 : int = prim::Constant[value=1]()
  %1090 : Tensor = aten::add(%1088, %924, %1089)
  %1091 : int[] = prim::Constant[value=[768]]()
  %1092 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1093 : Tensor, %1094 : Tensor, %1095 : Tensor = aten::native_layer_norm(%1090, %1091, %p45, %p44, %1092)
  %1096 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1093, %1094, %1095)
  %1097 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1098 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1099 : bool = prim::Constant[value=0]()
  %1100 : Tensor = aten::expand(%p4, %1098, %1099)
  %1101 : NoneType = prim::Constant()
  %1102 : Tensor = aten::clone(%1100, %1101)
  %1103 : NoneType = prim::Constant()
  %1104 : Tensor = aten::bernoulli(%1102, %1103)
  %1105 : Tensor = aten::div(%1104, %p2)
  %1106 : int[] = prim::Constant[value=[1, 0]]()
  %1107 : int[] = prim::Constant[value=[1, 0]]()
  %1108 : Tensor = aten::permute(%p98, %1107)
  %1109 : int[] = prim::Constant[value=[1, 0]]()
  %1110 : int[] = prim::Constant[value=[1, 0]]()
  %1111 : Tensor = aten::permute(%p100, %1110)
  %1112 : int[] = prim::Constant[value=[1024, 768]]()
  %1113 : int[] = prim::Constant[value=[1024, 768]]()
  %1114 : Tensor = aten::reshape(%1093, %1113)
  %1115 : Tensor = aten::mm(%1114, %1111)
  %1116 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1117 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1118 : Tensor = aten::reshape(%1115, %1117)
  %1119 : int = prim::Constant[value=1]()
  %1120 : Tensor = aten::add(%1118, %p99, %1119)
  %1121 : int[] = prim::Constant[value=[1024, 3072]]()
  %1122 : int[] = prim::Constant[value=[1024, 3072]]()
  %1123 : Tensor = aten::reshape(%1120, %1122)
  %1124 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1125 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1126 : Tensor = aten::reshape(%1123, %1125)
  %1127 : Tensor = aten::gelu(%1126)
  %1128 : int[] = prim::Constant[value=[1024, 3072]]()
  %1129 : int[] = prim::Constant[value=[1024, 3072]]()
  %1130 : Tensor = aten::reshape(%1127, %1129)
  %1131 : Tensor = aten::mm(%1130, %1108)
  %1132 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1133 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1134 : Tensor = aten::reshape(%1131, %1133)
  %1135 : int = prim::Constant[value=1]()
  %1136 : Tensor = aten::add(%1134, %p97, %1135)
  %1137 : int[] = prim::Constant[value=[1024, 768]]()
  %1138 : int[] = prim::Constant[value=[1024, 768]]()
  %1139 : Tensor = aten::reshape(%1136, %1138)
  %1140 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1141 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1142 : Tensor = aten::reshape(%1139, %1141)
  %1143 : Tensor = aten::mul(%1142, %1105)
  %1144 : int = prim::Constant[value=1]()
  %1145 : Tensor = aten::add(%1143, %1093, %1144)
  %1146 : int[] = prim::Constant[value=[768]]()
  %1147 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1148 : Tensor, %1149 : Tensor, %1150 : Tensor = aten::native_layer_norm(%1145, %1146, %p43, %p42, %1147)
  %1151 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1148, %1149, %1150)
  %1152 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1153 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1154 : bool = prim::Constant[value=0]()
  %1155 : Tensor = aten::expand(%p4, %1153, %1154)
  %1156 : NoneType = prim::Constant()
  %1157 : Tensor = aten::clone(%1155, %1156)
  %1158 : NoneType = prim::Constant()
  %1159 : Tensor = aten::bernoulli(%1157, %1158)
  %1160 : Tensor = aten::div(%1159, %p2)
  %1161 : int[] = prim::Constant[value=[1, 0]]()
  %1162 : int[] = prim::Constant[value=[1, 0]]()
  %1163 : Tensor = aten::permute(%p102, %1162)
  %1164 : int[] = prim::Constant[value=[1, 0]]()
  %1165 : int[] = prim::Constant[value=[1, 0]]()
  %1166 : Tensor = aten::permute(%p104, %1165)
  %1167 : int[] = prim::Constant[value=[1024, 768]]()
  %1168 : int[] = prim::Constant[value=[1024, 768]]()
  %1169 : Tensor = aten::reshape(%1148, %1168)
  %1170 : Tensor = aten::mm(%1169, %1166)
  %1171 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1172 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1173 : Tensor = aten::reshape(%1170, %1172)
  %1174 : int = prim::Constant[value=1]()
  %1175 : Tensor = aten::add(%1173, %p103, %1174)
  %1176 : int[] = prim::Constant[value=[1024, 768]]()
  %1177 : int[] = prim::Constant[value=[1024, 768]]()
  %1178 : Tensor = aten::reshape(%1175, %1177)
  %1179 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1180 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1181 : Tensor = aten::reshape(%1178, %1180)
  %1182 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1183 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1184 : Tensor = aten::reshape(%1181, %1183)
  %1185 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1186 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1187 : Tensor = aten::permute(%1184, %1186)
  %1188 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1189 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1190 : bool = prim::Constant[value=0]()
  %1191 : Tensor = aten::expand(%1187, %1189, %1190)
  %1192 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1193 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1194 : Tensor = aten::reshape(%1191, %1193)
  %1195 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1196 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1197 : bool = prim::Constant[value=0]()
  %1198 : Tensor = aten::expand(%p4, %1196, %1197)
  %1199 : NoneType = prim::Constant()
  %1200 : Tensor = aten::clone(%1198, %1199)
  %1201 : NoneType = prim::Constant()
  %1202 : Tensor = aten::bernoulli(%1200, %1201)
  %1203 : Tensor = aten::div(%1202, %p2)
  %1204 : int[] = prim::Constant[value=[1, 0]]()
  %1205 : int[] = prim::Constant[value=[1, 0]]()
  %1206 : Tensor = aten::permute(%p106, %1205)
  %1207 : int[] = prim::Constant[value=[1024, 768]]()
  %1208 : int[] = prim::Constant[value=[1024, 768]]()
  %1209 : Tensor = aten::reshape(%1148, %1208)
  %1210 : Tensor = aten::mm(%1209, %1206)
  %1211 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1212 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1213 : Tensor = aten::reshape(%1210, %1212)
  %1214 : int = prim::Constant[value=1]()
  %1215 : Tensor = aten::add(%1213, %p105, %1214)
  %1216 : int[] = prim::Constant[value=[1024, 768]]()
  %1217 : int[] = prim::Constant[value=[1024, 768]]()
  %1218 : Tensor = aten::reshape(%1215, %1217)
  %1219 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1220 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1221 : Tensor = aten::reshape(%1218, %1220)
  %1222 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1223 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1224 : Tensor = aten::reshape(%1221, %1223)
  %1225 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1226 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1227 : Tensor = aten::permute(%1224, %1226)
  %1228 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1229 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1230 : Tensor = aten::permute(%1227, %1229)
  %1231 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1232 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1233 : bool = prim::Constant[value=0]()
  %1234 : Tensor = aten::expand(%1230, %1232, %1233)
  %1235 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1236 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1237 : Tensor = aten::reshape(%1234, %1236)
  %1238 : int[] = prim::Constant[value=[1, 0]]()
  %1239 : int[] = prim::Constant[value=[1, 0]]()
  %1240 : Tensor = aten::permute(%p108, %1239)
  %1241 : int[] = prim::Constant[value=[1024, 768]]()
  %1242 : int[] = prim::Constant[value=[1024, 768]]()
  %1243 : Tensor = aten::reshape(%1148, %1242)
  %1244 : Tensor = aten::mm(%1243, %1240)
  %1245 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1246 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1247 : Tensor = aten::reshape(%1244, %1246)
  %1248 : int = prim::Constant[value=1]()
  %1249 : Tensor = aten::add(%1247, %p107, %1248)
  %1250 : int[] = prim::Constant[value=[1024, 768]]()
  %1251 : int[] = prim::Constant[value=[1024, 768]]()
  %1252 : Tensor = aten::reshape(%1249, %1251)
  %1253 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1254 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1255 : Tensor = aten::reshape(%1252, %1254)
  %1256 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1257 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1258 : Tensor = aten::reshape(%1255, %1257)
  %1259 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1260 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1261 : Tensor = aten::permute(%1258, %1260)
  %1262 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1263 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1264 : bool = prim::Constant[value=0]()
  %1265 : Tensor = aten::expand(%1261, %1263, %1264)
  %1266 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1267 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1268 : Tensor = aten::reshape(%1265, %1267)
  %1269 : Tensor = aten::bmm(%1268, %1237)
  %1270 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1271 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1272 : Tensor = aten::reshape(%1269, %1271)
  %1273 : Tensor = aten::div(%1272, %p68)
  %1274 : int = prim::Constant[value=1]()
  %1275 : Tensor = aten::add(%1273, %531, %1274)
  %1276 : int = prim::Constant[value=-1]()
  %1277 : bool = prim::Constant[value=0]()
  %1278 : Tensor = aten::_softmax(%1275, %1276, %1277)
  %1279 : Tensor = aten::mul(%1278, %1203)
  %1280 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1281 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1282 : bool = prim::Constant[value=0]()
  %1283 : Tensor = aten::expand(%1279, %1281, %1282)
  %1284 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1285 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1286 : Tensor = aten::reshape(%1283, %1285)
  %1287 : Tensor = aten::bmm(%1286, %1194)
  %1288 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1289 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1290 : Tensor = aten::reshape(%1287, %1289)
  %1291 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1292 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1293 : Tensor = aten::permute(%1290, %1292)
  %1294 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1295 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1296 : Tensor = aten::reshape(%1293, %1295)
  %1297 : int[] = prim::Constant[value=[1024, 768]]()
  %1298 : int[] = prim::Constant[value=[1024, 768]]()
  %1299 : Tensor = aten::reshape(%1296, %1298)
  %1300 : Tensor = aten::mm(%1299, %1163)
  %1301 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1302 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1303 : Tensor = aten::reshape(%1300, %1302)
  %1304 : int = prim::Constant[value=1]()
  %1305 : Tensor = aten::add(%1303, %p101, %1304)
  %1306 : int[] = prim::Constant[value=[1024, 768]]()
  %1307 : int[] = prim::Constant[value=[1024, 768]]()
  %1308 : Tensor = aten::reshape(%1305, %1307)
  %1309 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1310 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1311 : Tensor = aten::reshape(%1308, %1310)
  %1312 : Tensor = aten::mul(%1311, %1160)
  %1313 : int = prim::Constant[value=1]()
  %1314 : Tensor = aten::add(%1312, %1148, %1313)
  %1315 : int[] = prim::Constant[value=[768]]()
  %1316 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1317 : Tensor, %1318 : Tensor, %1319 : Tensor = aten::native_layer_norm(%1314, %1315, %p41, %p40, %1316)
  %1320 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1317, %1318, %1319)
  %1321 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1322 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1323 : bool = prim::Constant[value=0]()
  %1324 : Tensor = aten::expand(%p4, %1322, %1323)
  %1325 : NoneType = prim::Constant()
  %1326 : Tensor = aten::clone(%1324, %1325)
  %1327 : NoneType = prim::Constant()
  %1328 : Tensor = aten::bernoulli(%1326, %1327)
  %1329 : Tensor = aten::div(%1328, %p2)
  %1330 : int[] = prim::Constant[value=[1, 0]]()
  %1331 : int[] = prim::Constant[value=[1, 0]]()
  %1332 : Tensor = aten::permute(%p110, %1331)
  %1333 : int[] = prim::Constant[value=[1, 0]]()
  %1334 : int[] = prim::Constant[value=[1, 0]]()
  %1335 : Tensor = aten::permute(%p112, %1334)
  %1336 : int[] = prim::Constant[value=[1024, 768]]()
  %1337 : int[] = prim::Constant[value=[1024, 768]]()
  %1338 : Tensor = aten::reshape(%1317, %1337)
  %1339 : Tensor = aten::mm(%1338, %1335)
  %1340 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1341 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1342 : Tensor = aten::reshape(%1339, %1341)
  %1343 : int = prim::Constant[value=1]()
  %1344 : Tensor = aten::add(%1342, %p111, %1343)
  %1345 : int[] = prim::Constant[value=[1024, 3072]]()
  %1346 : int[] = prim::Constant[value=[1024, 3072]]()
  %1347 : Tensor = aten::reshape(%1344, %1346)
  %1348 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1349 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1350 : Tensor = aten::reshape(%1347, %1349)
  %1351 : Tensor = aten::gelu(%1350)
  %1352 : int[] = prim::Constant[value=[1024, 3072]]()
  %1353 : int[] = prim::Constant[value=[1024, 3072]]()
  %1354 : Tensor = aten::reshape(%1351, %1353)
  %1355 : Tensor = aten::mm(%1354, %1332)
  %1356 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1357 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1358 : Tensor = aten::reshape(%1355, %1357)
  %1359 : int = prim::Constant[value=1]()
  %1360 : Tensor = aten::add(%1358, %p109, %1359)
  %1361 : int[] = prim::Constant[value=[1024, 768]]()
  %1362 : int[] = prim::Constant[value=[1024, 768]]()
  %1363 : Tensor = aten::reshape(%1360, %1362)
  %1364 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1365 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1366 : Tensor = aten::reshape(%1363, %1365)
  %1367 : Tensor = aten::mul(%1366, %1329)
  %1368 : int = prim::Constant[value=1]()
  %1369 : Tensor = aten::add(%1367, %1317, %1368)
  %1370 : int[] = prim::Constant[value=[768]]()
  %1371 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1372 : Tensor, %1373 : Tensor, %1374 : Tensor = aten::native_layer_norm(%1369, %1370, %p39, %p38, %1371)
  %1375 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1372, %1373, %1374)
  %1376 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1377 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1378 : bool = prim::Constant[value=0]()
  %1379 : Tensor = aten::expand(%p4, %1377, %1378)
  %1380 : NoneType = prim::Constant()
  %1381 : Tensor = aten::clone(%1379, %1380)
  %1382 : NoneType = prim::Constant()
  %1383 : Tensor = aten::bernoulli(%1381, %1382)
  %1384 : Tensor = aten::div(%1383, %p2)
  %1385 : int[] = prim::Constant[value=[1, 0]]()
  %1386 : int[] = prim::Constant[value=[1, 0]]()
  %1387 : Tensor = aten::permute(%p114, %1386)
  %1388 : int[] = prim::Constant[value=[1, 0]]()
  %1389 : int[] = prim::Constant[value=[1, 0]]()
  %1390 : Tensor = aten::permute(%p116, %1389)
  %1391 : int[] = prim::Constant[value=[1024, 768]]()
  %1392 : int[] = prim::Constant[value=[1024, 768]]()
  %1393 : Tensor = aten::reshape(%1372, %1392)
  %1394 : Tensor = aten::mm(%1393, %1390)
  %1395 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1396 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1397 : Tensor = aten::reshape(%1394, %1396)
  %1398 : int = prim::Constant[value=1]()
  %1399 : Tensor = aten::add(%1397, %p115, %1398)
  %1400 : int[] = prim::Constant[value=[1024, 768]]()
  %1401 : int[] = prim::Constant[value=[1024, 768]]()
  %1402 : Tensor = aten::reshape(%1399, %1401)
  %1403 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1404 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1405 : Tensor = aten::reshape(%1402, %1404)
  %1406 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1407 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1408 : Tensor = aten::reshape(%1405, %1407)
  %1409 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1410 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1411 : Tensor = aten::permute(%1408, %1410)
  %1412 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1413 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1414 : bool = prim::Constant[value=0]()
  %1415 : Tensor = aten::expand(%1411, %1413, %1414)
  %1416 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1417 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1418 : Tensor = aten::reshape(%1415, %1417)
  %1419 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1420 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1421 : bool = prim::Constant[value=0]()
  %1422 : Tensor = aten::expand(%p4, %1420, %1421)
  %1423 : NoneType = prim::Constant()
  %1424 : Tensor = aten::clone(%1422, %1423)
  %1425 : NoneType = prim::Constant()
  %1426 : Tensor = aten::bernoulli(%1424, %1425)
  %1427 : Tensor = aten::div(%1426, %p2)
  %1428 : int[] = prim::Constant[value=[1, 0]]()
  %1429 : int[] = prim::Constant[value=[1, 0]]()
  %1430 : Tensor = aten::permute(%p118, %1429)
  %1431 : int[] = prim::Constant[value=[1024, 768]]()
  %1432 : int[] = prim::Constant[value=[1024, 768]]()
  %1433 : Tensor = aten::reshape(%1372, %1432)
  %1434 : Tensor = aten::mm(%1433, %1430)
  %1435 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1436 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1437 : Tensor = aten::reshape(%1434, %1436)
  %1438 : int = prim::Constant[value=1]()
  %1439 : Tensor = aten::add(%1437, %p117, %1438)
  %1440 : int[] = prim::Constant[value=[1024, 768]]()
  %1441 : int[] = prim::Constant[value=[1024, 768]]()
  %1442 : Tensor = aten::reshape(%1439, %1441)
  %1443 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1444 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1445 : Tensor = aten::reshape(%1442, %1444)
  %1446 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1447 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1448 : Tensor = aten::reshape(%1445, %1447)
  %1449 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1450 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1451 : Tensor = aten::permute(%1448, %1450)
  %1452 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1453 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1454 : Tensor = aten::permute(%1451, %1453)
  %1455 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1456 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1457 : bool = prim::Constant[value=0]()
  %1458 : Tensor = aten::expand(%1454, %1456, %1457)
  %1459 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1460 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1461 : Tensor = aten::reshape(%1458, %1460)
  %1462 : int[] = prim::Constant[value=[1, 0]]()
  %1463 : int[] = prim::Constant[value=[1, 0]]()
  %1464 : Tensor = aten::permute(%p120, %1463)
  %1465 : int[] = prim::Constant[value=[1024, 768]]()
  %1466 : int[] = prim::Constant[value=[1024, 768]]()
  %1467 : Tensor = aten::reshape(%1372, %1466)
  %1468 : Tensor = aten::mm(%1467, %1464)
  %1469 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1470 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1471 : Tensor = aten::reshape(%1468, %1470)
  %1472 : int = prim::Constant[value=1]()
  %1473 : Tensor = aten::add(%1471, %p119, %1472)
  %1474 : int[] = prim::Constant[value=[1024, 768]]()
  %1475 : int[] = prim::Constant[value=[1024, 768]]()
  %1476 : Tensor = aten::reshape(%1473, %1475)
  %1477 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1478 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1479 : Tensor = aten::reshape(%1476, %1478)
  %1480 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1481 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1482 : Tensor = aten::reshape(%1479, %1481)
  %1483 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1484 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1485 : Tensor = aten::permute(%1482, %1484)
  %1486 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1487 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1488 : bool = prim::Constant[value=0]()
  %1489 : Tensor = aten::expand(%1485, %1487, %1488)
  %1490 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1491 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1492 : Tensor = aten::reshape(%1489, %1491)
  %1493 : Tensor = aten::bmm(%1492, %1461)
  %1494 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1495 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1496 : Tensor = aten::reshape(%1493, %1495)
  %1497 : Tensor = aten::div(%1496, %p68)
  %1498 : int = prim::Constant[value=1]()
  %1499 : Tensor = aten::add(%1497, %531, %1498)
  %1500 : int = prim::Constant[value=-1]()
  %1501 : bool = prim::Constant[value=0]()
  %1502 : Tensor = aten::_softmax(%1499, %1500, %1501)
  %1503 : Tensor = aten::mul(%1502, %1427)
  %1504 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1505 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1506 : bool = prim::Constant[value=0]()
  %1507 : Tensor = aten::expand(%1503, %1505, %1506)
  %1508 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1509 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1510 : Tensor = aten::reshape(%1507, %1509)
  %1511 : Tensor = aten::bmm(%1510, %1418)
  %1512 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1513 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1514 : Tensor = aten::reshape(%1511, %1513)
  %1515 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1516 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1517 : Tensor = aten::permute(%1514, %1516)
  %1518 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1519 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1520 : Tensor = aten::reshape(%1517, %1519)
  %1521 : int[] = prim::Constant[value=[1024, 768]]()
  %1522 : int[] = prim::Constant[value=[1024, 768]]()
  %1523 : Tensor = aten::reshape(%1520, %1522)
  %1524 : Tensor = aten::mm(%1523, %1387)
  %1525 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1526 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1527 : Tensor = aten::reshape(%1524, %1526)
  %1528 : int = prim::Constant[value=1]()
  %1529 : Tensor = aten::add(%1527, %p113, %1528)
  %1530 : int[] = prim::Constant[value=[1024, 768]]()
  %1531 : int[] = prim::Constant[value=[1024, 768]]()
  %1532 : Tensor = aten::reshape(%1529, %1531)
  %1533 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1534 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1535 : Tensor = aten::reshape(%1532, %1534)
  %1536 : Tensor = aten::mul(%1535, %1384)
  %1537 : int = prim::Constant[value=1]()
  %1538 : Tensor = aten::add(%1536, %1372, %1537)
  %1539 : int[] = prim::Constant[value=[768]]()
  %1540 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1541 : Tensor, %1542 : Tensor, %1543 : Tensor = aten::native_layer_norm(%1538, %1539, %p37, %p36, %1540)
  %1544 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1541, %1542, %1543)
  %1545 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1546 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1547 : bool = prim::Constant[value=0]()
  %1548 : Tensor = aten::expand(%p4, %1546, %1547)
  %1549 : NoneType = prim::Constant()
  %1550 : Tensor = aten::clone(%1548, %1549)
  %1551 : NoneType = prim::Constant()
  %1552 : Tensor = aten::bernoulli(%1550, %1551)
  %1553 : Tensor = aten::div(%1552, %p2)
  %1554 : int[] = prim::Constant[value=[1, 0]]()
  %1555 : int[] = prim::Constant[value=[1, 0]]()
  %1556 : Tensor = aten::permute(%p122, %1555)
  %1557 : int[] = prim::Constant[value=[1, 0]]()
  %1558 : int[] = prim::Constant[value=[1, 0]]()
  %1559 : Tensor = aten::permute(%p124, %1558)
  %1560 : int[] = prim::Constant[value=[1024, 768]]()
  %1561 : int[] = prim::Constant[value=[1024, 768]]()
  %1562 : Tensor = aten::reshape(%1541, %1561)
  %1563 : Tensor = aten::mm(%1562, %1559)
  %1564 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1565 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1566 : Tensor = aten::reshape(%1563, %1565)
  %1567 : int = prim::Constant[value=1]()
  %1568 : Tensor = aten::add(%1566, %p123, %1567)
  %1569 : int[] = prim::Constant[value=[1024, 3072]]()
  %1570 : int[] = prim::Constant[value=[1024, 3072]]()
  %1571 : Tensor = aten::reshape(%1568, %1570)
  %1572 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1573 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1574 : Tensor = aten::reshape(%1571, %1573)
  %1575 : Tensor = aten::gelu(%1574)
  %1576 : int[] = prim::Constant[value=[1024, 3072]]()
  %1577 : int[] = prim::Constant[value=[1024, 3072]]()
  %1578 : Tensor = aten::reshape(%1575, %1577)
  %1579 : Tensor = aten::mm(%1578, %1556)
  %1580 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1581 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1582 : Tensor = aten::reshape(%1579, %1581)
  %1583 : int = prim::Constant[value=1]()
  %1584 : Tensor = aten::add(%1582, %p121, %1583)
  %1585 : int[] = prim::Constant[value=[1024, 768]]()
  %1586 : int[] = prim::Constant[value=[1024, 768]]()
  %1587 : Tensor = aten::reshape(%1584, %1586)
  %1588 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1589 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1590 : Tensor = aten::reshape(%1587, %1589)
  %1591 : Tensor = aten::mul(%1590, %1553)
  %1592 : int = prim::Constant[value=1]()
  %1593 : Tensor = aten::add(%1591, %1541, %1592)
  %1594 : int[] = prim::Constant[value=[768]]()
  %1595 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1596 : Tensor, %1597 : Tensor, %1598 : Tensor = aten::native_layer_norm(%1593, %1594, %p35, %p34, %1595)
  %1599 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1596, %1597, %1598)
  %1600 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1601 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1602 : bool = prim::Constant[value=0]()
  %1603 : Tensor = aten::expand(%p4, %1601, %1602)
  %1604 : NoneType = prim::Constant()
  %1605 : Tensor = aten::clone(%1603, %1604)
  %1606 : NoneType = prim::Constant()
  %1607 : Tensor = aten::bernoulli(%1605, %1606)
  %1608 : Tensor = aten::div(%1607, %p2)
  %1609 : int[] = prim::Constant[value=[1, 0]]()
  %1610 : int[] = prim::Constant[value=[1, 0]]()
  %1611 : Tensor = aten::permute(%p126, %1610)
  %1612 : int[] = prim::Constant[value=[1, 0]]()
  %1613 : int[] = prim::Constant[value=[1, 0]]()
  %1614 : Tensor = aten::permute(%p128, %1613)
  %1615 : int[] = prim::Constant[value=[1024, 768]]()
  %1616 : int[] = prim::Constant[value=[1024, 768]]()
  %1617 : Tensor = aten::reshape(%1596, %1616)
  %1618 : Tensor = aten::mm(%1617, %1614)
  %1619 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1620 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1621 : Tensor = aten::reshape(%1618, %1620)
  %1622 : int = prim::Constant[value=1]()
  %1623 : Tensor = aten::add(%1621, %p127, %1622)
  %1624 : int[] = prim::Constant[value=[1024, 768]]()
  %1625 : int[] = prim::Constant[value=[1024, 768]]()
  %1626 : Tensor = aten::reshape(%1623, %1625)
  %1627 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1628 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1629 : Tensor = aten::reshape(%1626, %1628)
  %1630 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1631 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1632 : Tensor = aten::reshape(%1629, %1631)
  %1633 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1634 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1635 : Tensor = aten::permute(%1632, %1634)
  %1636 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1637 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1638 : bool = prim::Constant[value=0]()
  %1639 : Tensor = aten::expand(%1635, %1637, %1638)
  %1640 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1641 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1642 : Tensor = aten::reshape(%1639, %1641)
  %1643 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1644 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1645 : bool = prim::Constant[value=0]()
  %1646 : Tensor = aten::expand(%p4, %1644, %1645)
  %1647 : NoneType = prim::Constant()
  %1648 : Tensor = aten::clone(%1646, %1647)
  %1649 : NoneType = prim::Constant()
  %1650 : Tensor = aten::bernoulli(%1648, %1649)
  %1651 : Tensor = aten::div(%1650, %p2)
  %1652 : int[] = prim::Constant[value=[1, 0]]()
  %1653 : int[] = prim::Constant[value=[1, 0]]()
  %1654 : Tensor = aten::permute(%p130, %1653)
  %1655 : int[] = prim::Constant[value=[1024, 768]]()
  %1656 : int[] = prim::Constant[value=[1024, 768]]()
  %1657 : Tensor = aten::reshape(%1596, %1656)
  %1658 : Tensor = aten::mm(%1657, %1654)
  %1659 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1660 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1661 : Tensor = aten::reshape(%1658, %1660)
  %1662 : int = prim::Constant[value=1]()
  %1663 : Tensor = aten::add(%1661, %p129, %1662)
  %1664 : int[] = prim::Constant[value=[1024, 768]]()
  %1665 : int[] = prim::Constant[value=[1024, 768]]()
  %1666 : Tensor = aten::reshape(%1663, %1665)
  %1667 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1668 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1669 : Tensor = aten::reshape(%1666, %1668)
  %1670 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1671 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1672 : Tensor = aten::reshape(%1669, %1671)
  %1673 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1674 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1675 : Tensor = aten::permute(%1672, %1674)
  %1676 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1677 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1678 : Tensor = aten::permute(%1675, %1677)
  %1679 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1680 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1681 : bool = prim::Constant[value=0]()
  %1682 : Tensor = aten::expand(%1678, %1680, %1681)
  %1683 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1684 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1685 : Tensor = aten::reshape(%1682, %1684)
  %1686 : int[] = prim::Constant[value=[1, 0]]()
  %1687 : int[] = prim::Constant[value=[1, 0]]()
  %1688 : Tensor = aten::permute(%p132, %1687)
  %1689 : int[] = prim::Constant[value=[1024, 768]]()
  %1690 : int[] = prim::Constant[value=[1024, 768]]()
  %1691 : Tensor = aten::reshape(%1596, %1690)
  %1692 : Tensor = aten::mm(%1691, %1688)
  %1693 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1694 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1695 : Tensor = aten::reshape(%1692, %1694)
  %1696 : int = prim::Constant[value=1]()
  %1697 : Tensor = aten::add(%1695, %p131, %1696)
  %1698 : int[] = prim::Constant[value=[1024, 768]]()
  %1699 : int[] = prim::Constant[value=[1024, 768]]()
  %1700 : Tensor = aten::reshape(%1697, %1699)
  %1701 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1702 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1703 : Tensor = aten::reshape(%1700, %1702)
  %1704 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1705 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1706 : Tensor = aten::reshape(%1703, %1705)
  %1707 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1708 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1709 : Tensor = aten::permute(%1706, %1708)
  %1710 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1711 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1712 : bool = prim::Constant[value=0]()
  %1713 : Tensor = aten::expand(%1709, %1711, %1712)
  %1714 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1715 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1716 : Tensor = aten::reshape(%1713, %1715)
  %1717 : Tensor = aten::bmm(%1716, %1685)
  %1718 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1719 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1720 : Tensor = aten::reshape(%1717, %1719)
  %1721 : Tensor = aten::div(%1720, %p68)
  %1722 : int = prim::Constant[value=1]()
  %1723 : Tensor = aten::add(%1721, %531, %1722)
  %1724 : int = prim::Constant[value=-1]()
  %1725 : bool = prim::Constant[value=0]()
  %1726 : Tensor = aten::_softmax(%1723, %1724, %1725)
  %1727 : Tensor = aten::mul(%1726, %1651)
  %1728 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1729 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1730 : bool = prim::Constant[value=0]()
  %1731 : Tensor = aten::expand(%1727, %1729, %1730)
  %1732 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1733 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1734 : Tensor = aten::reshape(%1731, %1733)
  %1735 : Tensor = aten::bmm(%1734, %1642)
  %1736 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1737 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1738 : Tensor = aten::reshape(%1735, %1737)
  %1739 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1740 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1741 : Tensor = aten::permute(%1738, %1740)
  %1742 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1743 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1744 : Tensor = aten::reshape(%1741, %1743)
  %1745 : int[] = prim::Constant[value=[1024, 768]]()
  %1746 : int[] = prim::Constant[value=[1024, 768]]()
  %1747 : Tensor = aten::reshape(%1744, %1746)
  %1748 : Tensor = aten::mm(%1747, %1611)
  %1749 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1750 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1751 : Tensor = aten::reshape(%1748, %1750)
  %1752 : int = prim::Constant[value=1]()
  %1753 : Tensor = aten::add(%1751, %p125, %1752)
  %1754 : int[] = prim::Constant[value=[1024, 768]]()
  %1755 : int[] = prim::Constant[value=[1024, 768]]()
  %1756 : Tensor = aten::reshape(%1753, %1755)
  %1757 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1758 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1759 : Tensor = aten::reshape(%1756, %1758)
  %1760 : Tensor = aten::mul(%1759, %1608)
  %1761 : int = prim::Constant[value=1]()
  %1762 : Tensor = aten::add(%1760, %1596, %1761)
  %1763 : int[] = prim::Constant[value=[768]]()
  %1764 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1765 : Tensor, %1766 : Tensor, %1767 : Tensor = aten::native_layer_norm(%1762, %1763, %p33, %p32, %1764)
  %1768 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1765, %1766, %1767)
  %1769 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1770 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1771 : bool = prim::Constant[value=0]()
  %1772 : Tensor = aten::expand(%p4, %1770, %1771)
  %1773 : NoneType = prim::Constant()
  %1774 : Tensor = aten::clone(%1772, %1773)
  %1775 : NoneType = prim::Constant()
  %1776 : Tensor = aten::bernoulli(%1774, %1775)
  %1777 : Tensor = aten::div(%1776, %p2)
  %1778 : int[] = prim::Constant[value=[1, 0]]()
  %1779 : int[] = prim::Constant[value=[1, 0]]()
  %1780 : Tensor = aten::permute(%p134, %1779)
  %1781 : int[] = prim::Constant[value=[1, 0]]()
  %1782 : int[] = prim::Constant[value=[1, 0]]()
  %1783 : Tensor = aten::permute(%p136, %1782)
  %1784 : int[] = prim::Constant[value=[1024, 768]]()
  %1785 : int[] = prim::Constant[value=[1024, 768]]()
  %1786 : Tensor = aten::reshape(%1765, %1785)
  %1787 : Tensor = aten::mm(%1786, %1783)
  %1788 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1789 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1790 : Tensor = aten::reshape(%1787, %1789)
  %1791 : int = prim::Constant[value=1]()
  %1792 : Tensor = aten::add(%1790, %p135, %1791)
  %1793 : int[] = prim::Constant[value=[1024, 3072]]()
  %1794 : int[] = prim::Constant[value=[1024, 3072]]()
  %1795 : Tensor = aten::reshape(%1792, %1794)
  %1796 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1797 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %1798 : Tensor = aten::reshape(%1795, %1797)
  %1799 : Tensor = aten::gelu(%1798)
  %1800 : int[] = prim::Constant[value=[1024, 3072]]()
  %1801 : int[] = prim::Constant[value=[1024, 3072]]()
  %1802 : Tensor = aten::reshape(%1799, %1801)
  %1803 : Tensor = aten::mm(%1802, %1780)
  %1804 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1805 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1806 : Tensor = aten::reshape(%1803, %1805)
  %1807 : int = prim::Constant[value=1]()
  %1808 : Tensor = aten::add(%1806, %p133, %1807)
  %1809 : int[] = prim::Constant[value=[1024, 768]]()
  %1810 : int[] = prim::Constant[value=[1024, 768]]()
  %1811 : Tensor = aten::reshape(%1808, %1810)
  %1812 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1813 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1814 : Tensor = aten::reshape(%1811, %1813)
  %1815 : Tensor = aten::mul(%1814, %1777)
  %1816 : int = prim::Constant[value=1]()
  %1817 : Tensor = aten::add(%1815, %1765, %1816)
  %1818 : int[] = prim::Constant[value=[768]]()
  %1819 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1820 : Tensor, %1821 : Tensor, %1822 : Tensor = aten::native_layer_norm(%1817, %1818, %p31, %p30, %1819)
  %1823 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1820, %1821, %1822)
  %1824 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1825 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1826 : bool = prim::Constant[value=0]()
  %1827 : Tensor = aten::expand(%p4, %1825, %1826)
  %1828 : NoneType = prim::Constant()
  %1829 : Tensor = aten::clone(%1827, %1828)
  %1830 : NoneType = prim::Constant()
  %1831 : Tensor = aten::bernoulli(%1829, %1830)
  %1832 : Tensor = aten::div(%1831, %p2)
  %1833 : int[] = prim::Constant[value=[1, 0]]()
  %1834 : int[] = prim::Constant[value=[1, 0]]()
  %1835 : Tensor = aten::permute(%p138, %1834)
  %1836 : int[] = prim::Constant[value=[1, 0]]()
  %1837 : int[] = prim::Constant[value=[1, 0]]()
  %1838 : Tensor = aten::permute(%p140, %1837)
  %1839 : int[] = prim::Constant[value=[1024, 768]]()
  %1840 : int[] = prim::Constant[value=[1024, 768]]()
  %1841 : Tensor = aten::reshape(%1820, %1840)
  %1842 : Tensor = aten::mm(%1841, %1838)
  %1843 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1844 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1845 : Tensor = aten::reshape(%1842, %1844)
  %1846 : int = prim::Constant[value=1]()
  %1847 : Tensor = aten::add(%1845, %p139, %1846)
  %1848 : int[] = prim::Constant[value=[1024, 768]]()
  %1849 : int[] = prim::Constant[value=[1024, 768]]()
  %1850 : Tensor = aten::reshape(%1847, %1849)
  %1851 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1852 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1853 : Tensor = aten::reshape(%1850, %1852)
  %1854 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1855 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1856 : Tensor = aten::reshape(%1853, %1855)
  %1857 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1858 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1859 : Tensor = aten::permute(%1856, %1858)
  %1860 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1861 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1862 : bool = prim::Constant[value=0]()
  %1863 : Tensor = aten::expand(%1859, %1861, %1862)
  %1864 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1865 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1866 : Tensor = aten::reshape(%1863, %1865)
  %1867 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1868 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1869 : bool = prim::Constant[value=0]()
  %1870 : Tensor = aten::expand(%p4, %1868, %1869)
  %1871 : NoneType = prim::Constant()
  %1872 : Tensor = aten::clone(%1870, %1871)
  %1873 : NoneType = prim::Constant()
  %1874 : Tensor = aten::bernoulli(%1872, %1873)
  %1875 : Tensor = aten::div(%1874, %p2)
  %1876 : int[] = prim::Constant[value=[1, 0]]()
  %1877 : int[] = prim::Constant[value=[1, 0]]()
  %1878 : Tensor = aten::permute(%p142, %1877)
  %1879 : int[] = prim::Constant[value=[1024, 768]]()
  %1880 : int[] = prim::Constant[value=[1024, 768]]()
  %1881 : Tensor = aten::reshape(%1820, %1880)
  %1882 : Tensor = aten::mm(%1881, %1878)
  %1883 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1884 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1885 : Tensor = aten::reshape(%1882, %1884)
  %1886 : int = prim::Constant[value=1]()
  %1887 : Tensor = aten::add(%1885, %p141, %1886)
  %1888 : int[] = prim::Constant[value=[1024, 768]]()
  %1889 : int[] = prim::Constant[value=[1024, 768]]()
  %1890 : Tensor = aten::reshape(%1887, %1889)
  %1891 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1892 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1893 : Tensor = aten::reshape(%1890, %1892)
  %1894 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1895 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1896 : Tensor = aten::reshape(%1893, %1895)
  %1897 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1898 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1899 : Tensor = aten::permute(%1896, %1898)
  %1900 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1901 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %1902 : Tensor = aten::permute(%1899, %1901)
  %1903 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1904 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %1905 : bool = prim::Constant[value=0]()
  %1906 : Tensor = aten::expand(%1902, %1904, %1905)
  %1907 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1908 : int[] = prim::Constant[value=[24, 64, 512]]()
  %1909 : Tensor = aten::reshape(%1906, %1908)
  %1910 : int[] = prim::Constant[value=[1, 0]]()
  %1911 : int[] = prim::Constant[value=[1, 0]]()
  %1912 : Tensor = aten::permute(%p144, %1911)
  %1913 : int[] = prim::Constant[value=[1024, 768]]()
  %1914 : int[] = prim::Constant[value=[1024, 768]]()
  %1915 : Tensor = aten::reshape(%1820, %1914)
  %1916 : Tensor = aten::mm(%1915, %1912)
  %1917 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1918 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1919 : Tensor = aten::reshape(%1916, %1918)
  %1920 : int = prim::Constant[value=1]()
  %1921 : Tensor = aten::add(%1919, %p143, %1920)
  %1922 : int[] = prim::Constant[value=[1024, 768]]()
  %1923 : int[] = prim::Constant[value=[1024, 768]]()
  %1924 : Tensor = aten::reshape(%1921, %1923)
  %1925 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1926 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1927 : Tensor = aten::reshape(%1924, %1926)
  %1928 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1929 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %1930 : Tensor = aten::reshape(%1927, %1929)
  %1931 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1932 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1933 : Tensor = aten::permute(%1930, %1932)
  %1934 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1935 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1936 : bool = prim::Constant[value=0]()
  %1937 : Tensor = aten::expand(%1933, %1935, %1936)
  %1938 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1939 : int[] = prim::Constant[value=[24, 512, 64]]()
  %1940 : Tensor = aten::reshape(%1937, %1939)
  %1941 : Tensor = aten::bmm(%1940, %1909)
  %1942 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1943 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1944 : Tensor = aten::reshape(%1941, %1943)
  %1945 : Tensor = aten::div(%1944, %p68)
  %1946 : int = prim::Constant[value=1]()
  %1947 : Tensor = aten::add(%1945, %531, %1946)
  %1948 : int = prim::Constant[value=-1]()
  %1949 : bool = prim::Constant[value=0]()
  %1950 : Tensor = aten::_softmax(%1947, %1948, %1949)
  %1951 : Tensor = aten::mul(%1950, %1875)
  %1952 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1953 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %1954 : bool = prim::Constant[value=0]()
  %1955 : Tensor = aten::expand(%1951, %1953, %1954)
  %1956 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1957 : int[] = prim::Constant[value=[24, 512, 512]]()
  %1958 : Tensor = aten::reshape(%1955, %1957)
  %1959 : Tensor = aten::bmm(%1958, %1866)
  %1960 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1961 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %1962 : Tensor = aten::reshape(%1959, %1961)
  %1963 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1964 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %1965 : Tensor = aten::permute(%1962, %1964)
  %1966 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1967 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1968 : Tensor = aten::reshape(%1965, %1967)
  %1969 : int[] = prim::Constant[value=[1024, 768]]()
  %1970 : int[] = prim::Constant[value=[1024, 768]]()
  %1971 : Tensor = aten::reshape(%1968, %1970)
  %1972 : Tensor = aten::mm(%1971, %1835)
  %1973 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1974 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1975 : Tensor = aten::reshape(%1972, %1974)
  %1976 : int = prim::Constant[value=1]()
  %1977 : Tensor = aten::add(%1975, %p137, %1976)
  %1978 : int[] = prim::Constant[value=[1024, 768]]()
  %1979 : int[] = prim::Constant[value=[1024, 768]]()
  %1980 : Tensor = aten::reshape(%1977, %1979)
  %1981 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1982 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1983 : Tensor = aten::reshape(%1980, %1982)
  %1984 : Tensor = aten::mul(%1983, %1832)
  %1985 : int = prim::Constant[value=1]()
  %1986 : Tensor = aten::add(%1984, %1820, %1985)
  %1987 : int[] = prim::Constant[value=[768]]()
  %1988 : float = prim::Constant[value=9.9999999999999998e-13]()
  %1989 : Tensor, %1990 : Tensor, %1991 : Tensor = aten::native_layer_norm(%1986, %1987, %p29, %p28, %1988)
  %1992 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%1989, %1990, %1991)
  %1993 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1994 : int[] = prim::Constant[value=[2, 512, 768]]()
  %1995 : bool = prim::Constant[value=0]()
  %1996 : Tensor = aten::expand(%p4, %1994, %1995)
  %1997 : NoneType = prim::Constant()
  %1998 : Tensor = aten::clone(%1996, %1997)
  %1999 : NoneType = prim::Constant()
  %2000 : Tensor = aten::bernoulli(%1998, %1999)
  %2001 : Tensor = aten::div(%2000, %p2)
  %2002 : int[] = prim::Constant[value=[1, 0]]()
  %2003 : int[] = prim::Constant[value=[1, 0]]()
  %2004 : Tensor = aten::permute(%p146, %2003)
  %2005 : int[] = prim::Constant[value=[1, 0]]()
  %2006 : int[] = prim::Constant[value=[1, 0]]()
  %2007 : Tensor = aten::permute(%p148, %2006)
  %2008 : int[] = prim::Constant[value=[1024, 768]]()
  %2009 : int[] = prim::Constant[value=[1024, 768]]()
  %2010 : Tensor = aten::reshape(%1989, %2009)
  %2011 : Tensor = aten::mm(%2010, %2007)
  %2012 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2013 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2014 : Tensor = aten::reshape(%2011, %2013)
  %2015 : int = prim::Constant[value=1]()
  %2016 : Tensor = aten::add(%2014, %p147, %2015)
  %2017 : int[] = prim::Constant[value=[1024, 3072]]()
  %2018 : int[] = prim::Constant[value=[1024, 3072]]()
  %2019 : Tensor = aten::reshape(%2016, %2018)
  %2020 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2021 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2022 : Tensor = aten::reshape(%2019, %2021)
  %2023 : Tensor = aten::gelu(%2022)
  %2024 : int[] = prim::Constant[value=[1024, 3072]]()
  %2025 : int[] = prim::Constant[value=[1024, 3072]]()
  %2026 : Tensor = aten::reshape(%2023, %2025)
  %2027 : Tensor = aten::mm(%2026, %2004)
  %2028 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2029 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2030 : Tensor = aten::reshape(%2027, %2029)
  %2031 : int = prim::Constant[value=1]()
  %2032 : Tensor = aten::add(%2030, %p145, %2031)
  %2033 : int[] = prim::Constant[value=[1024, 768]]()
  %2034 : int[] = prim::Constant[value=[1024, 768]]()
  %2035 : Tensor = aten::reshape(%2032, %2034)
  %2036 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2037 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2038 : Tensor = aten::reshape(%2035, %2037)
  %2039 : Tensor = aten::mul(%2038, %2001)
  %2040 : int = prim::Constant[value=1]()
  %2041 : Tensor = aten::add(%2039, %1989, %2040)
  %2042 : int[] = prim::Constant[value=[768]]()
  %2043 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2044 : Tensor, %2045 : Tensor, %2046 : Tensor = aten::native_layer_norm(%2041, %2042, %p27, %p26, %2043)
  %2047 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2044, %2045, %2046)
  %2048 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2049 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2050 : bool = prim::Constant[value=0]()
  %2051 : Tensor = aten::expand(%p4, %2049, %2050)
  %2052 : NoneType = prim::Constant()
  %2053 : Tensor = aten::clone(%2051, %2052)
  %2054 : NoneType = prim::Constant()
  %2055 : Tensor = aten::bernoulli(%2053, %2054)
  %2056 : Tensor = aten::div(%2055, %p2)
  %2057 : int[] = prim::Constant[value=[1, 0]]()
  %2058 : int[] = prim::Constant[value=[1, 0]]()
  %2059 : Tensor = aten::permute(%p150, %2058)
  %2060 : int[] = prim::Constant[value=[1, 0]]()
  %2061 : int[] = prim::Constant[value=[1, 0]]()
  %2062 : Tensor = aten::permute(%p152, %2061)
  %2063 : int[] = prim::Constant[value=[1024, 768]]()
  %2064 : int[] = prim::Constant[value=[1024, 768]]()
  %2065 : Tensor = aten::reshape(%2044, %2064)
  %2066 : Tensor = aten::mm(%2065, %2062)
  %2067 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2068 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2069 : Tensor = aten::reshape(%2066, %2068)
  %2070 : int = prim::Constant[value=1]()
  %2071 : Tensor = aten::add(%2069, %p151, %2070)
  %2072 : int[] = prim::Constant[value=[1024, 768]]()
  %2073 : int[] = prim::Constant[value=[1024, 768]]()
  %2074 : Tensor = aten::reshape(%2071, %2073)
  %2075 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2076 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2077 : Tensor = aten::reshape(%2074, %2076)
  %2078 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2079 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2080 : Tensor = aten::reshape(%2077, %2079)
  %2081 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2082 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2083 : Tensor = aten::permute(%2080, %2082)
  %2084 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2085 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2086 : bool = prim::Constant[value=0]()
  %2087 : Tensor = aten::expand(%2083, %2085, %2086)
  %2088 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2089 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2090 : Tensor = aten::reshape(%2087, %2089)
  %2091 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2092 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2093 : bool = prim::Constant[value=0]()
  %2094 : Tensor = aten::expand(%p4, %2092, %2093)
  %2095 : NoneType = prim::Constant()
  %2096 : Tensor = aten::clone(%2094, %2095)
  %2097 : NoneType = prim::Constant()
  %2098 : Tensor = aten::bernoulli(%2096, %2097)
  %2099 : Tensor = aten::div(%2098, %p2)
  %2100 : int[] = prim::Constant[value=[1, 0]]()
  %2101 : int[] = prim::Constant[value=[1, 0]]()
  %2102 : Tensor = aten::permute(%p154, %2101)
  %2103 : int[] = prim::Constant[value=[1024, 768]]()
  %2104 : int[] = prim::Constant[value=[1024, 768]]()
  %2105 : Tensor = aten::reshape(%2044, %2104)
  %2106 : Tensor = aten::mm(%2105, %2102)
  %2107 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2108 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2109 : Tensor = aten::reshape(%2106, %2108)
  %2110 : int = prim::Constant[value=1]()
  %2111 : Tensor = aten::add(%2109, %p153, %2110)
  %2112 : int[] = prim::Constant[value=[1024, 768]]()
  %2113 : int[] = prim::Constant[value=[1024, 768]]()
  %2114 : Tensor = aten::reshape(%2111, %2113)
  %2115 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2116 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2117 : Tensor = aten::reshape(%2114, %2116)
  %2118 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2119 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2120 : Tensor = aten::reshape(%2117, %2119)
  %2121 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2122 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2123 : Tensor = aten::permute(%2120, %2122)
  %2124 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2125 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2126 : Tensor = aten::permute(%2123, %2125)
  %2127 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2128 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2129 : bool = prim::Constant[value=0]()
  %2130 : Tensor = aten::expand(%2126, %2128, %2129)
  %2131 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2132 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2133 : Tensor = aten::reshape(%2130, %2132)
  %2134 : int[] = prim::Constant[value=[1, 0]]()
  %2135 : int[] = prim::Constant[value=[1, 0]]()
  %2136 : Tensor = aten::permute(%p156, %2135)
  %2137 : int[] = prim::Constant[value=[1024, 768]]()
  %2138 : int[] = prim::Constant[value=[1024, 768]]()
  %2139 : Tensor = aten::reshape(%2044, %2138)
  %2140 : Tensor = aten::mm(%2139, %2136)
  %2141 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2142 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2143 : Tensor = aten::reshape(%2140, %2142)
  %2144 : int = prim::Constant[value=1]()
  %2145 : Tensor = aten::add(%2143, %p155, %2144)
  %2146 : int[] = prim::Constant[value=[1024, 768]]()
  %2147 : int[] = prim::Constant[value=[1024, 768]]()
  %2148 : Tensor = aten::reshape(%2145, %2147)
  %2149 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2150 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2151 : Tensor = aten::reshape(%2148, %2150)
  %2152 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2153 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2154 : Tensor = aten::reshape(%2151, %2153)
  %2155 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2156 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2157 : Tensor = aten::permute(%2154, %2156)
  %2158 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2159 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2160 : bool = prim::Constant[value=0]()
  %2161 : Tensor = aten::expand(%2157, %2159, %2160)
  %2162 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2163 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2164 : Tensor = aten::reshape(%2161, %2163)
  %2165 : Tensor = aten::bmm(%2164, %2133)
  %2166 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2167 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2168 : Tensor = aten::reshape(%2165, %2167)
  %2169 : Tensor = aten::div(%2168, %p68)
  %2170 : int = prim::Constant[value=1]()
  %2171 : Tensor = aten::add(%2169, %531, %2170)
  %2172 : int = prim::Constant[value=-1]()
  %2173 : bool = prim::Constant[value=0]()
  %2174 : Tensor = aten::_softmax(%2171, %2172, %2173)
  %2175 : Tensor = aten::mul(%2174, %2099)
  %2176 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2177 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2178 : bool = prim::Constant[value=0]()
  %2179 : Tensor = aten::expand(%2175, %2177, %2178)
  %2180 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2181 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2182 : Tensor = aten::reshape(%2179, %2181)
  %2183 : Tensor = aten::bmm(%2182, %2090)
  %2184 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2185 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2186 : Tensor = aten::reshape(%2183, %2185)
  %2187 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2188 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2189 : Tensor = aten::permute(%2186, %2188)
  %2190 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2191 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2192 : Tensor = aten::reshape(%2189, %2191)
  %2193 : int[] = prim::Constant[value=[1024, 768]]()
  %2194 : int[] = prim::Constant[value=[1024, 768]]()
  %2195 : Tensor = aten::reshape(%2192, %2194)
  %2196 : Tensor = aten::mm(%2195, %2059)
  %2197 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2198 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2199 : Tensor = aten::reshape(%2196, %2198)
  %2200 : int = prim::Constant[value=1]()
  %2201 : Tensor = aten::add(%2199, %p149, %2200)
  %2202 : int[] = prim::Constant[value=[1024, 768]]()
  %2203 : int[] = prim::Constant[value=[1024, 768]]()
  %2204 : Tensor = aten::reshape(%2201, %2203)
  %2205 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2206 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2207 : Tensor = aten::reshape(%2204, %2206)
  %2208 : Tensor = aten::mul(%2207, %2056)
  %2209 : int = prim::Constant[value=1]()
  %2210 : Tensor = aten::add(%2208, %2044, %2209)
  %2211 : int[] = prim::Constant[value=[768]]()
  %2212 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2213 : Tensor, %2214 : Tensor, %2215 : Tensor = aten::native_layer_norm(%2210, %2211, %p25, %p24, %2212)
  %2216 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2213, %2214, %2215)
  %2217 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2218 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2219 : bool = prim::Constant[value=0]()
  %2220 : Tensor = aten::expand(%p4, %2218, %2219)
  %2221 : NoneType = prim::Constant()
  %2222 : Tensor = aten::clone(%2220, %2221)
  %2223 : NoneType = prim::Constant()
  %2224 : Tensor = aten::bernoulli(%2222, %2223)
  %2225 : Tensor = aten::div(%2224, %p2)
  %2226 : int[] = prim::Constant[value=[1, 0]]()
  %2227 : int[] = prim::Constant[value=[1, 0]]()
  %2228 : Tensor = aten::permute(%p158, %2227)
  %2229 : int[] = prim::Constant[value=[1, 0]]()
  %2230 : int[] = prim::Constant[value=[1, 0]]()
  %2231 : Tensor = aten::permute(%p160, %2230)
  %2232 : int[] = prim::Constant[value=[1024, 768]]()
  %2233 : int[] = prim::Constant[value=[1024, 768]]()
  %2234 : Tensor = aten::reshape(%2213, %2233)
  %2235 : Tensor = aten::mm(%2234, %2231)
  %2236 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2237 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2238 : Tensor = aten::reshape(%2235, %2237)
  %2239 : int = prim::Constant[value=1]()
  %2240 : Tensor = aten::add(%2238, %p159, %2239)
  %2241 : int[] = prim::Constant[value=[1024, 3072]]()
  %2242 : int[] = prim::Constant[value=[1024, 3072]]()
  %2243 : Tensor = aten::reshape(%2240, %2242)
  %2244 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2245 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2246 : Tensor = aten::reshape(%2243, %2245)
  %2247 : Tensor = aten::gelu(%2246)
  %2248 : int[] = prim::Constant[value=[1024, 3072]]()
  %2249 : int[] = prim::Constant[value=[1024, 3072]]()
  %2250 : Tensor = aten::reshape(%2247, %2249)
  %2251 : Tensor = aten::mm(%2250, %2228)
  %2252 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2253 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2254 : Tensor = aten::reshape(%2251, %2253)
  %2255 : int = prim::Constant[value=1]()
  %2256 : Tensor = aten::add(%2254, %p157, %2255)
  %2257 : int[] = prim::Constant[value=[1024, 768]]()
  %2258 : int[] = prim::Constant[value=[1024, 768]]()
  %2259 : Tensor = aten::reshape(%2256, %2258)
  %2260 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2261 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2262 : Tensor = aten::reshape(%2259, %2261)
  %2263 : Tensor = aten::mul(%2262, %2225)
  %2264 : int = prim::Constant[value=1]()
  %2265 : Tensor = aten::add(%2263, %2213, %2264)
  %2266 : int[] = prim::Constant[value=[768]]()
  %2267 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2268 : Tensor, %2269 : Tensor, %2270 : Tensor = aten::native_layer_norm(%2265, %2266, %p23, %p22, %2267)
  %2271 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2268, %2269, %2270)
  %2272 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2273 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2274 : bool = prim::Constant[value=0]()
  %2275 : Tensor = aten::expand(%p4, %2273, %2274)
  %2276 : NoneType = prim::Constant()
  %2277 : Tensor = aten::clone(%2275, %2276)
  %2278 : NoneType = prim::Constant()
  %2279 : Tensor = aten::bernoulli(%2277, %2278)
  %2280 : Tensor = aten::div(%2279, %p2)
  %2281 : int[] = prim::Constant[value=[1, 0]]()
  %2282 : int[] = prim::Constant[value=[1, 0]]()
  %2283 : Tensor = aten::permute(%p162, %2282)
  %2284 : int[] = prim::Constant[value=[1, 0]]()
  %2285 : int[] = prim::Constant[value=[1, 0]]()
  %2286 : Tensor = aten::permute(%p164, %2285)
  %2287 : int[] = prim::Constant[value=[1024, 768]]()
  %2288 : int[] = prim::Constant[value=[1024, 768]]()
  %2289 : Tensor = aten::reshape(%2268, %2288)
  %2290 : Tensor = aten::mm(%2289, %2286)
  %2291 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2292 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2293 : Tensor = aten::reshape(%2290, %2292)
  %2294 : int = prim::Constant[value=1]()
  %2295 : Tensor = aten::add(%2293, %p163, %2294)
  %2296 : int[] = prim::Constant[value=[1024, 768]]()
  %2297 : int[] = prim::Constant[value=[1024, 768]]()
  %2298 : Tensor = aten::reshape(%2295, %2297)
  %2299 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2300 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2301 : Tensor = aten::reshape(%2298, %2300)
  %2302 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2303 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2304 : Tensor = aten::reshape(%2301, %2303)
  %2305 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2306 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2307 : Tensor = aten::permute(%2304, %2306)
  %2308 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2309 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2310 : bool = prim::Constant[value=0]()
  %2311 : Tensor = aten::expand(%2307, %2309, %2310)
  %2312 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2313 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2314 : Tensor = aten::reshape(%2311, %2313)
  %2315 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2316 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2317 : bool = prim::Constant[value=0]()
  %2318 : Tensor = aten::expand(%p4, %2316, %2317)
  %2319 : NoneType = prim::Constant()
  %2320 : Tensor = aten::clone(%2318, %2319)
  %2321 : NoneType = prim::Constant()
  %2322 : Tensor = aten::bernoulli(%2320, %2321)
  %2323 : Tensor = aten::div(%2322, %p2)
  %2324 : int[] = prim::Constant[value=[1, 0]]()
  %2325 : int[] = prim::Constant[value=[1, 0]]()
  %2326 : Tensor = aten::permute(%p166, %2325)
  %2327 : int[] = prim::Constant[value=[1024, 768]]()
  %2328 : int[] = prim::Constant[value=[1024, 768]]()
  %2329 : Tensor = aten::reshape(%2268, %2328)
  %2330 : Tensor = aten::mm(%2329, %2326)
  %2331 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2332 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2333 : Tensor = aten::reshape(%2330, %2332)
  %2334 : int = prim::Constant[value=1]()
  %2335 : Tensor = aten::add(%2333, %p165, %2334)
  %2336 : int[] = prim::Constant[value=[1024, 768]]()
  %2337 : int[] = prim::Constant[value=[1024, 768]]()
  %2338 : Tensor = aten::reshape(%2335, %2337)
  %2339 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2340 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2341 : Tensor = aten::reshape(%2338, %2340)
  %2342 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2343 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2344 : Tensor = aten::reshape(%2341, %2343)
  %2345 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2346 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2347 : Tensor = aten::permute(%2344, %2346)
  %2348 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2349 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2350 : Tensor = aten::permute(%2347, %2349)
  %2351 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2352 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2353 : bool = prim::Constant[value=0]()
  %2354 : Tensor = aten::expand(%2350, %2352, %2353)
  %2355 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2356 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2357 : Tensor = aten::reshape(%2354, %2356)
  %2358 : int[] = prim::Constant[value=[1, 0]]()
  %2359 : int[] = prim::Constant[value=[1, 0]]()
  %2360 : Tensor = aten::permute(%p168, %2359)
  %2361 : int[] = prim::Constant[value=[1024, 768]]()
  %2362 : int[] = prim::Constant[value=[1024, 768]]()
  %2363 : Tensor = aten::reshape(%2268, %2362)
  %2364 : Tensor = aten::mm(%2363, %2360)
  %2365 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2366 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2367 : Tensor = aten::reshape(%2364, %2366)
  %2368 : int = prim::Constant[value=1]()
  %2369 : Tensor = aten::add(%2367, %p167, %2368)
  %2370 : int[] = prim::Constant[value=[1024, 768]]()
  %2371 : int[] = prim::Constant[value=[1024, 768]]()
  %2372 : Tensor = aten::reshape(%2369, %2371)
  %2373 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2374 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2375 : Tensor = aten::reshape(%2372, %2374)
  %2376 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2377 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2378 : Tensor = aten::reshape(%2375, %2377)
  %2379 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2380 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2381 : Tensor = aten::permute(%2378, %2380)
  %2382 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2383 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2384 : bool = prim::Constant[value=0]()
  %2385 : Tensor = aten::expand(%2381, %2383, %2384)
  %2386 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2387 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2388 : Tensor = aten::reshape(%2385, %2387)
  %2389 : Tensor = aten::bmm(%2388, %2357)
  %2390 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2391 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2392 : Tensor = aten::reshape(%2389, %2391)
  %2393 : Tensor = aten::div(%2392, %p68)
  %2394 : int = prim::Constant[value=1]()
  %2395 : Tensor = aten::add(%2393, %531, %2394)
  %2396 : int = prim::Constant[value=-1]()
  %2397 : bool = prim::Constant[value=0]()
  %2398 : Tensor = aten::_softmax(%2395, %2396, %2397)
  %2399 : Tensor = aten::mul(%2398, %2323)
  %2400 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2401 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2402 : bool = prim::Constant[value=0]()
  %2403 : Tensor = aten::expand(%2399, %2401, %2402)
  %2404 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2405 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2406 : Tensor = aten::reshape(%2403, %2405)
  %2407 : Tensor = aten::bmm(%2406, %2314)
  %2408 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2409 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2410 : Tensor = aten::reshape(%2407, %2409)
  %2411 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2412 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2413 : Tensor = aten::permute(%2410, %2412)
  %2414 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2415 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2416 : Tensor = aten::reshape(%2413, %2415)
  %2417 : int[] = prim::Constant[value=[1024, 768]]()
  %2418 : int[] = prim::Constant[value=[1024, 768]]()
  %2419 : Tensor = aten::reshape(%2416, %2418)
  %2420 : Tensor = aten::mm(%2419, %2283)
  %2421 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2422 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2423 : Tensor = aten::reshape(%2420, %2422)
  %2424 : int = prim::Constant[value=1]()
  %2425 : Tensor = aten::add(%2423, %p161, %2424)
  %2426 : int[] = prim::Constant[value=[1024, 768]]()
  %2427 : int[] = prim::Constant[value=[1024, 768]]()
  %2428 : Tensor = aten::reshape(%2425, %2427)
  %2429 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2430 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2431 : Tensor = aten::reshape(%2428, %2430)
  %2432 : Tensor = aten::mul(%2431, %2280)
  %2433 : int = prim::Constant[value=1]()
  %2434 : Tensor = aten::add(%2432, %2268, %2433)
  %2435 : int[] = prim::Constant[value=[768]]()
  %2436 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2437 : Tensor, %2438 : Tensor, %2439 : Tensor = aten::native_layer_norm(%2434, %2435, %p21, %p20, %2436)
  %2440 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2437, %2438, %2439)
  %2441 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2442 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2443 : bool = prim::Constant[value=0]()
  %2444 : Tensor = aten::expand(%p4, %2442, %2443)
  %2445 : NoneType = prim::Constant()
  %2446 : Tensor = aten::clone(%2444, %2445)
  %2447 : NoneType = prim::Constant()
  %2448 : Tensor = aten::bernoulli(%2446, %2447)
  %2449 : Tensor = aten::div(%2448, %p2)
  %2450 : int[] = prim::Constant[value=[1, 0]]()
  %2451 : int[] = prim::Constant[value=[1, 0]]()
  %2452 : Tensor = aten::permute(%p170, %2451)
  %2453 : int[] = prim::Constant[value=[1, 0]]()
  %2454 : int[] = prim::Constant[value=[1, 0]]()
  %2455 : Tensor = aten::permute(%p172, %2454)
  %2456 : int[] = prim::Constant[value=[1024, 768]]()
  %2457 : int[] = prim::Constant[value=[1024, 768]]()
  %2458 : Tensor = aten::reshape(%2437, %2457)
  %2459 : Tensor = aten::mm(%2458, %2455)
  %2460 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2461 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2462 : Tensor = aten::reshape(%2459, %2461)
  %2463 : int = prim::Constant[value=1]()
  %2464 : Tensor = aten::add(%2462, %p171, %2463)
  %2465 : int[] = prim::Constant[value=[1024, 3072]]()
  %2466 : int[] = prim::Constant[value=[1024, 3072]]()
  %2467 : Tensor = aten::reshape(%2464, %2466)
  %2468 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2469 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2470 : Tensor = aten::reshape(%2467, %2469)
  %2471 : Tensor = aten::gelu(%2470)
  %2472 : int[] = prim::Constant[value=[1024, 3072]]()
  %2473 : int[] = prim::Constant[value=[1024, 3072]]()
  %2474 : Tensor = aten::reshape(%2471, %2473)
  %2475 : Tensor = aten::mm(%2474, %2452)
  %2476 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2477 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2478 : Tensor = aten::reshape(%2475, %2477)
  %2479 : int = prim::Constant[value=1]()
  %2480 : Tensor = aten::add(%2478, %p169, %2479)
  %2481 : int[] = prim::Constant[value=[1024, 768]]()
  %2482 : int[] = prim::Constant[value=[1024, 768]]()
  %2483 : Tensor = aten::reshape(%2480, %2482)
  %2484 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2485 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2486 : Tensor = aten::reshape(%2483, %2485)
  %2487 : Tensor = aten::mul(%2486, %2449)
  %2488 : int = prim::Constant[value=1]()
  %2489 : Tensor = aten::add(%2487, %2437, %2488)
  %2490 : int[] = prim::Constant[value=[768]]()
  %2491 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2492 : Tensor, %2493 : Tensor, %2494 : Tensor = aten::native_layer_norm(%2489, %2490, %p19, %p18, %2491)
  %2495 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2492, %2493, %2494)
  %2496 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2497 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2498 : bool = prim::Constant[value=0]()
  %2499 : Tensor = aten::expand(%p4, %2497, %2498)
  %2500 : NoneType = prim::Constant()
  %2501 : Tensor = aten::clone(%2499, %2500)
  %2502 : NoneType = prim::Constant()
  %2503 : Tensor = aten::bernoulli(%2501, %2502)
  %2504 : Tensor = aten::div(%2503, %p2)
  %2505 : int[] = prim::Constant[value=[1, 0]]()
  %2506 : int[] = prim::Constant[value=[1, 0]]()
  %2507 : Tensor = aten::permute(%p174, %2506)
  %2508 : int[] = prim::Constant[value=[1, 0]]()
  %2509 : int[] = prim::Constant[value=[1, 0]]()
  %2510 : Tensor = aten::permute(%p176, %2509)
  %2511 : int[] = prim::Constant[value=[1024, 768]]()
  %2512 : int[] = prim::Constant[value=[1024, 768]]()
  %2513 : Tensor = aten::reshape(%2492, %2512)
  %2514 : Tensor = aten::mm(%2513, %2510)
  %2515 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2516 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2517 : Tensor = aten::reshape(%2514, %2516)
  %2518 : int = prim::Constant[value=1]()
  %2519 : Tensor = aten::add(%2517, %p175, %2518)
  %2520 : int[] = prim::Constant[value=[1024, 768]]()
  %2521 : int[] = prim::Constant[value=[1024, 768]]()
  %2522 : Tensor = aten::reshape(%2519, %2521)
  %2523 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2524 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2525 : Tensor = aten::reshape(%2522, %2524)
  %2526 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2527 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2528 : Tensor = aten::reshape(%2525, %2527)
  %2529 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2530 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2531 : Tensor = aten::permute(%2528, %2530)
  %2532 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2533 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2534 : bool = prim::Constant[value=0]()
  %2535 : Tensor = aten::expand(%2531, %2533, %2534)
  %2536 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2537 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2538 : Tensor = aten::reshape(%2535, %2537)
  %2539 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2540 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2541 : bool = prim::Constant[value=0]()
  %2542 : Tensor = aten::expand(%p4, %2540, %2541)
  %2543 : NoneType = prim::Constant()
  %2544 : Tensor = aten::clone(%2542, %2543)
  %2545 : NoneType = prim::Constant()
  %2546 : Tensor = aten::bernoulli(%2544, %2545)
  %2547 : Tensor = aten::div(%2546, %p2)
  %2548 : int[] = prim::Constant[value=[1, 0]]()
  %2549 : int[] = prim::Constant[value=[1, 0]]()
  %2550 : Tensor = aten::permute(%p178, %2549)
  %2551 : int[] = prim::Constant[value=[1024, 768]]()
  %2552 : int[] = prim::Constant[value=[1024, 768]]()
  %2553 : Tensor = aten::reshape(%2492, %2552)
  %2554 : Tensor = aten::mm(%2553, %2550)
  %2555 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2556 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2557 : Tensor = aten::reshape(%2554, %2556)
  %2558 : int = prim::Constant[value=1]()
  %2559 : Tensor = aten::add(%2557, %p177, %2558)
  %2560 : int[] = prim::Constant[value=[1024, 768]]()
  %2561 : int[] = prim::Constant[value=[1024, 768]]()
  %2562 : Tensor = aten::reshape(%2559, %2561)
  %2563 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2564 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2565 : Tensor = aten::reshape(%2562, %2564)
  %2566 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2567 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2568 : Tensor = aten::reshape(%2565, %2567)
  %2569 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2570 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2571 : Tensor = aten::permute(%2568, %2570)
  %2572 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2573 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2574 : Tensor = aten::permute(%2571, %2573)
  %2575 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2576 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2577 : bool = prim::Constant[value=0]()
  %2578 : Tensor = aten::expand(%2574, %2576, %2577)
  %2579 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2580 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2581 : Tensor = aten::reshape(%2578, %2580)
  %2582 : int[] = prim::Constant[value=[1, 0]]()
  %2583 : int[] = prim::Constant[value=[1, 0]]()
  %2584 : Tensor = aten::permute(%p180, %2583)
  %2585 : int[] = prim::Constant[value=[1024, 768]]()
  %2586 : int[] = prim::Constant[value=[1024, 768]]()
  %2587 : Tensor = aten::reshape(%2492, %2586)
  %2588 : Tensor = aten::mm(%2587, %2584)
  %2589 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2590 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2591 : Tensor = aten::reshape(%2588, %2590)
  %2592 : int = prim::Constant[value=1]()
  %2593 : Tensor = aten::add(%2591, %p179, %2592)
  %2594 : int[] = prim::Constant[value=[1024, 768]]()
  %2595 : int[] = prim::Constant[value=[1024, 768]]()
  %2596 : Tensor = aten::reshape(%2593, %2595)
  %2597 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2598 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2599 : Tensor = aten::reshape(%2596, %2598)
  %2600 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2601 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2602 : Tensor = aten::reshape(%2599, %2601)
  %2603 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2604 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2605 : Tensor = aten::permute(%2602, %2604)
  %2606 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2607 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2608 : bool = prim::Constant[value=0]()
  %2609 : Tensor = aten::expand(%2605, %2607, %2608)
  %2610 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2611 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2612 : Tensor = aten::reshape(%2609, %2611)
  %2613 : Tensor = aten::bmm(%2612, %2581)
  %2614 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2615 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2616 : Tensor = aten::reshape(%2613, %2615)
  %2617 : Tensor = aten::div(%2616, %p68)
  %2618 : int = prim::Constant[value=1]()
  %2619 : Tensor = aten::add(%2617, %531, %2618)
  %2620 : int = prim::Constant[value=-1]()
  %2621 : bool = prim::Constant[value=0]()
  %2622 : Tensor = aten::_softmax(%2619, %2620, %2621)
  %2623 : Tensor = aten::mul(%2622, %2547)
  %2624 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2625 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2626 : bool = prim::Constant[value=0]()
  %2627 : Tensor = aten::expand(%2623, %2625, %2626)
  %2628 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2629 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2630 : Tensor = aten::reshape(%2627, %2629)
  %2631 : Tensor = aten::bmm(%2630, %2538)
  %2632 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2633 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2634 : Tensor = aten::reshape(%2631, %2633)
  %2635 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2636 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2637 : Tensor = aten::permute(%2634, %2636)
  %2638 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2639 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2640 : Tensor = aten::reshape(%2637, %2639)
  %2641 : int[] = prim::Constant[value=[1024, 768]]()
  %2642 : int[] = prim::Constant[value=[1024, 768]]()
  %2643 : Tensor = aten::reshape(%2640, %2642)
  %2644 : Tensor = aten::mm(%2643, %2507)
  %2645 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2646 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2647 : Tensor = aten::reshape(%2644, %2646)
  %2648 : int = prim::Constant[value=1]()
  %2649 : Tensor = aten::add(%2647, %p173, %2648)
  %2650 : int[] = prim::Constant[value=[1024, 768]]()
  %2651 : int[] = prim::Constant[value=[1024, 768]]()
  %2652 : Tensor = aten::reshape(%2649, %2651)
  %2653 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2654 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2655 : Tensor = aten::reshape(%2652, %2654)
  %2656 : Tensor = aten::mul(%2655, %2504)
  %2657 : int = prim::Constant[value=1]()
  %2658 : Tensor = aten::add(%2656, %2492, %2657)
  %2659 : int[] = prim::Constant[value=[768]]()
  %2660 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2661 : Tensor, %2662 : Tensor, %2663 : Tensor = aten::native_layer_norm(%2658, %2659, %p17, %p16, %2660)
  %2664 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2661, %2662, %2663)
  %2665 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2666 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2667 : bool = prim::Constant[value=0]()
  %2668 : Tensor = aten::expand(%p4, %2666, %2667)
  %2669 : NoneType = prim::Constant()
  %2670 : Tensor = aten::clone(%2668, %2669)
  %2671 : NoneType = prim::Constant()
  %2672 : Tensor = aten::bernoulli(%2670, %2671)
  %2673 : Tensor = aten::div(%2672, %p2)
  %2674 : int[] = prim::Constant[value=[1, 0]]()
  %2675 : int[] = prim::Constant[value=[1, 0]]()
  %2676 : Tensor = aten::permute(%p182, %2675)
  %2677 : int[] = prim::Constant[value=[1, 0]]()
  %2678 : int[] = prim::Constant[value=[1, 0]]()
  %2679 : Tensor = aten::permute(%p184, %2678)
  %2680 : int[] = prim::Constant[value=[1024, 768]]()
  %2681 : int[] = prim::Constant[value=[1024, 768]]()
  %2682 : Tensor = aten::reshape(%2661, %2681)
  %2683 : Tensor = aten::mm(%2682, %2679)
  %2684 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2685 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2686 : Tensor = aten::reshape(%2683, %2685)
  %2687 : int = prim::Constant[value=1]()
  %2688 : Tensor = aten::add(%2686, %p183, %2687)
  %2689 : int[] = prim::Constant[value=[1024, 3072]]()
  %2690 : int[] = prim::Constant[value=[1024, 3072]]()
  %2691 : Tensor = aten::reshape(%2688, %2690)
  %2692 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2693 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2694 : Tensor = aten::reshape(%2691, %2693)
  %2695 : Tensor = aten::gelu(%2694)
  %2696 : int[] = prim::Constant[value=[1024, 3072]]()
  %2697 : int[] = prim::Constant[value=[1024, 3072]]()
  %2698 : Tensor = aten::reshape(%2695, %2697)
  %2699 : Tensor = aten::mm(%2698, %2676)
  %2700 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2701 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2702 : Tensor = aten::reshape(%2699, %2701)
  %2703 : int = prim::Constant[value=1]()
  %2704 : Tensor = aten::add(%2702, %p181, %2703)
  %2705 : int[] = prim::Constant[value=[1024, 768]]()
  %2706 : int[] = prim::Constant[value=[1024, 768]]()
  %2707 : Tensor = aten::reshape(%2704, %2706)
  %2708 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2709 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2710 : Tensor = aten::reshape(%2707, %2709)
  %2711 : Tensor = aten::mul(%2710, %2673)
  %2712 : int = prim::Constant[value=1]()
  %2713 : Tensor = aten::add(%2711, %2661, %2712)
  %2714 : int[] = prim::Constant[value=[768]]()
  %2715 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2716 : Tensor, %2717 : Tensor, %2718 : Tensor = aten::native_layer_norm(%2713, %2714, %p15, %p14, %2715)
  %2719 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2716, %2717, %2718)
  %2720 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2721 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2722 : bool = prim::Constant[value=0]()
  %2723 : Tensor = aten::expand(%p4, %2721, %2722)
  %2724 : NoneType = prim::Constant()
  %2725 : Tensor = aten::clone(%2723, %2724)
  %2726 : NoneType = prim::Constant()
  %2727 : Tensor = aten::bernoulli(%2725, %2726)
  %2728 : Tensor = aten::div(%2727, %p2)
  %2729 : int[] = prim::Constant[value=[1, 0]]()
  %2730 : int[] = prim::Constant[value=[1, 0]]()
  %2731 : Tensor = aten::permute(%p186, %2730)
  %2732 : int[] = prim::Constant[value=[1, 0]]()
  %2733 : int[] = prim::Constant[value=[1, 0]]()
  %2734 : Tensor = aten::permute(%p188, %2733)
  %2735 : int[] = prim::Constant[value=[1024, 768]]()
  %2736 : int[] = prim::Constant[value=[1024, 768]]()
  %2737 : Tensor = aten::reshape(%2716, %2736)
  %2738 : Tensor = aten::mm(%2737, %2734)
  %2739 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2740 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2741 : Tensor = aten::reshape(%2738, %2740)
  %2742 : int = prim::Constant[value=1]()
  %2743 : Tensor = aten::add(%2741, %p187, %2742)
  %2744 : int[] = prim::Constant[value=[1024, 768]]()
  %2745 : int[] = prim::Constant[value=[1024, 768]]()
  %2746 : Tensor = aten::reshape(%2743, %2745)
  %2747 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2748 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2749 : Tensor = aten::reshape(%2746, %2748)
  %2750 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2751 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2752 : Tensor = aten::reshape(%2749, %2751)
  %2753 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2754 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2755 : Tensor = aten::permute(%2752, %2754)
  %2756 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2757 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2758 : bool = prim::Constant[value=0]()
  %2759 : Tensor = aten::expand(%2755, %2757, %2758)
  %2760 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2761 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2762 : Tensor = aten::reshape(%2759, %2761)
  %2763 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2764 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2765 : bool = prim::Constant[value=0]()
  %2766 : Tensor = aten::expand(%p4, %2764, %2765)
  %2767 : NoneType = prim::Constant()
  %2768 : Tensor = aten::clone(%2766, %2767)
  %2769 : NoneType = prim::Constant()
  %2770 : Tensor = aten::bernoulli(%2768, %2769)
  %2771 : Tensor = aten::div(%2770, %p2)
  %2772 : int[] = prim::Constant[value=[1, 0]]()
  %2773 : int[] = prim::Constant[value=[1, 0]]()
  %2774 : Tensor = aten::permute(%p190, %2773)
  %2775 : int[] = prim::Constant[value=[1024, 768]]()
  %2776 : int[] = prim::Constant[value=[1024, 768]]()
  %2777 : Tensor = aten::reshape(%2716, %2776)
  %2778 : Tensor = aten::mm(%2777, %2774)
  %2779 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2780 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2781 : Tensor = aten::reshape(%2778, %2780)
  %2782 : int = prim::Constant[value=1]()
  %2783 : Tensor = aten::add(%2781, %p189, %2782)
  %2784 : int[] = prim::Constant[value=[1024, 768]]()
  %2785 : int[] = prim::Constant[value=[1024, 768]]()
  %2786 : Tensor = aten::reshape(%2783, %2785)
  %2787 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2788 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2789 : Tensor = aten::reshape(%2786, %2788)
  %2790 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2791 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2792 : Tensor = aten::reshape(%2789, %2791)
  %2793 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2794 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2795 : Tensor = aten::permute(%2792, %2794)
  %2796 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2797 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %2798 : Tensor = aten::permute(%2795, %2797)
  %2799 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2800 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %2801 : bool = prim::Constant[value=0]()
  %2802 : Tensor = aten::expand(%2798, %2800, %2801)
  %2803 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2804 : int[] = prim::Constant[value=[24, 64, 512]]()
  %2805 : Tensor = aten::reshape(%2802, %2804)
  %2806 : int[] = prim::Constant[value=[1, 0]]()
  %2807 : int[] = prim::Constant[value=[1, 0]]()
  %2808 : Tensor = aten::permute(%p192, %2807)
  %2809 : int[] = prim::Constant[value=[1024, 768]]()
  %2810 : int[] = prim::Constant[value=[1024, 768]]()
  %2811 : Tensor = aten::reshape(%2716, %2810)
  %2812 : Tensor = aten::mm(%2811, %2808)
  %2813 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2814 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2815 : Tensor = aten::reshape(%2812, %2814)
  %2816 : int = prim::Constant[value=1]()
  %2817 : Tensor = aten::add(%2815, %p191, %2816)
  %2818 : int[] = prim::Constant[value=[1024, 768]]()
  %2819 : int[] = prim::Constant[value=[1024, 768]]()
  %2820 : Tensor = aten::reshape(%2817, %2819)
  %2821 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2822 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2823 : Tensor = aten::reshape(%2820, %2822)
  %2824 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2825 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2826 : Tensor = aten::reshape(%2823, %2825)
  %2827 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2828 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2829 : Tensor = aten::permute(%2826, %2828)
  %2830 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2831 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2832 : bool = prim::Constant[value=0]()
  %2833 : Tensor = aten::expand(%2829, %2831, %2832)
  %2834 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2835 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2836 : Tensor = aten::reshape(%2833, %2835)
  %2837 : Tensor = aten::bmm(%2836, %2805)
  %2838 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2839 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2840 : Tensor = aten::reshape(%2837, %2839)
  %2841 : Tensor = aten::div(%2840, %p68)
  %2842 : int = prim::Constant[value=1]()
  %2843 : Tensor = aten::add(%2841, %531, %2842)
  %2844 : int = prim::Constant[value=-1]()
  %2845 : bool = prim::Constant[value=0]()
  %2846 : Tensor = aten::_softmax(%2843, %2844, %2845)
  %2847 : Tensor = aten::mul(%2846, %2771)
  %2848 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2849 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2850 : bool = prim::Constant[value=0]()
  %2851 : Tensor = aten::expand(%2847, %2849, %2850)
  %2852 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2853 : int[] = prim::Constant[value=[24, 512, 512]]()
  %2854 : Tensor = aten::reshape(%2851, %2853)
  %2855 : Tensor = aten::bmm(%2854, %2762)
  %2856 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2857 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2858 : Tensor = aten::reshape(%2855, %2857)
  %2859 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2860 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2861 : Tensor = aten::permute(%2858, %2860)
  %2862 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2863 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2864 : Tensor = aten::reshape(%2861, %2863)
  %2865 : int[] = prim::Constant[value=[1024, 768]]()
  %2866 : int[] = prim::Constant[value=[1024, 768]]()
  %2867 : Tensor = aten::reshape(%2864, %2866)
  %2868 : Tensor = aten::mm(%2867, %2731)
  %2869 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2870 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2871 : Tensor = aten::reshape(%2868, %2870)
  %2872 : int = prim::Constant[value=1]()
  %2873 : Tensor = aten::add(%2871, %p185, %2872)
  %2874 : int[] = prim::Constant[value=[1024, 768]]()
  %2875 : int[] = prim::Constant[value=[1024, 768]]()
  %2876 : Tensor = aten::reshape(%2873, %2875)
  %2877 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2878 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2879 : Tensor = aten::reshape(%2876, %2878)
  %2880 : Tensor = aten::mul(%2879, %2728)
  %2881 : int = prim::Constant[value=1]()
  %2882 : Tensor = aten::add(%2880, %2716, %2881)
  %2883 : int[] = prim::Constant[value=[768]]()
  %2884 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2885 : Tensor, %2886 : Tensor, %2887 : Tensor = aten::native_layer_norm(%2882, %2883, %p13, %p12, %2884)
  %2888 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2885, %2886, %2887)
  %2889 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2890 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2891 : bool = prim::Constant[value=0]()
  %2892 : Tensor = aten::expand(%p4, %2890, %2891)
  %2893 : NoneType = prim::Constant()
  %2894 : Tensor = aten::clone(%2892, %2893)
  %2895 : NoneType = prim::Constant()
  %2896 : Tensor = aten::bernoulli(%2894, %2895)
  %2897 : Tensor = aten::div(%2896, %p2)
  %2898 : int[] = prim::Constant[value=[1, 0]]()
  %2899 : int[] = prim::Constant[value=[1, 0]]()
  %2900 : Tensor = aten::permute(%p194, %2899)
  %2901 : int[] = prim::Constant[value=[1, 0]]()
  %2902 : int[] = prim::Constant[value=[1, 0]]()
  %2903 : Tensor = aten::permute(%p196, %2902)
  %2904 : int[] = prim::Constant[value=[1024, 768]]()
  %2905 : int[] = prim::Constant[value=[1024, 768]]()
  %2906 : Tensor = aten::reshape(%2885, %2905)
  %2907 : Tensor = aten::mm(%2906, %2903)
  %2908 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2909 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2910 : Tensor = aten::reshape(%2907, %2909)
  %2911 : int = prim::Constant[value=1]()
  %2912 : Tensor = aten::add(%2910, %p195, %2911)
  %2913 : int[] = prim::Constant[value=[1024, 3072]]()
  %2914 : int[] = prim::Constant[value=[1024, 3072]]()
  %2915 : Tensor = aten::reshape(%2912, %2914)
  %2916 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2917 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %2918 : Tensor = aten::reshape(%2915, %2917)
  %2919 : Tensor = aten::gelu(%2918)
  %2920 : int[] = prim::Constant[value=[1024, 3072]]()
  %2921 : int[] = prim::Constant[value=[1024, 3072]]()
  %2922 : Tensor = aten::reshape(%2919, %2921)
  %2923 : Tensor = aten::mm(%2922, %2900)
  %2924 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2925 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2926 : Tensor = aten::reshape(%2923, %2925)
  %2927 : int = prim::Constant[value=1]()
  %2928 : Tensor = aten::add(%2926, %p193, %2927)
  %2929 : int[] = prim::Constant[value=[1024, 768]]()
  %2930 : int[] = prim::Constant[value=[1024, 768]]()
  %2931 : Tensor = aten::reshape(%2928, %2930)
  %2932 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2933 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2934 : Tensor = aten::reshape(%2931, %2933)
  %2935 : Tensor = aten::mul(%2934, %2897)
  %2936 : int = prim::Constant[value=1]()
  %2937 : Tensor = aten::add(%2935, %2885, %2936)
  %2938 : int[] = prim::Constant[value=[768]]()
  %2939 : float = prim::Constant[value=9.9999999999999998e-13]()
  %2940 : Tensor, %2941 : Tensor, %2942 : Tensor = aten::native_layer_norm(%2937, %2938, %p11, %p10, %2939)
  %2943 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%2940, %2941, %2942)
  %2944 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2945 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2946 : bool = prim::Constant[value=0]()
  %2947 : Tensor = aten::expand(%p4, %2945, %2946)
  %2948 : NoneType = prim::Constant()
  %2949 : Tensor = aten::clone(%2947, %2948)
  %2950 : NoneType = prim::Constant()
  %2951 : Tensor = aten::bernoulli(%2949, %2950)
  %2952 : Tensor = aten::div(%2951, %p2)
  %2953 : int[] = prim::Constant[value=[1, 0]]()
  %2954 : int[] = prim::Constant[value=[1, 0]]()
  %2955 : Tensor = aten::permute(%p198, %2954)
  %2956 : int[] = prim::Constant[value=[1, 0]]()
  %2957 : int[] = prim::Constant[value=[1, 0]]()
  %2958 : Tensor = aten::permute(%p200, %2957)
  %2959 : int[] = prim::Constant[value=[1024, 768]]()
  %2960 : int[] = prim::Constant[value=[1024, 768]]()
  %2961 : Tensor = aten::reshape(%2940, %2960)
  %2962 : Tensor = aten::mm(%2961, %2958)
  %2963 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2964 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2965 : Tensor = aten::reshape(%2962, %2964)
  %2966 : int = prim::Constant[value=1]()
  %2967 : Tensor = aten::add(%2965, %p199, %2966)
  %2968 : int[] = prim::Constant[value=[1024, 768]]()
  %2969 : int[] = prim::Constant[value=[1024, 768]]()
  %2970 : Tensor = aten::reshape(%2967, %2969)
  %2971 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2972 : int[] = prim::Constant[value=[2, 512, 768]]()
  %2973 : Tensor = aten::reshape(%2970, %2972)
  %2974 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2975 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %2976 : Tensor = aten::reshape(%2973, %2975)
  %2977 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2978 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %2979 : Tensor = aten::permute(%2976, %2978)
  %2980 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2981 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %2982 : bool = prim::Constant[value=0]()
  %2983 : Tensor = aten::expand(%2979, %2981, %2982)
  %2984 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2985 : int[] = prim::Constant[value=[24, 512, 64]]()
  %2986 : Tensor = aten::reshape(%2983, %2985)
  %2987 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2988 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %2989 : bool = prim::Constant[value=0]()
  %2990 : Tensor = aten::expand(%p4, %2988, %2989)
  %2991 : NoneType = prim::Constant()
  %2992 : Tensor = aten::clone(%2990, %2991)
  %2993 : NoneType = prim::Constant()
  %2994 : Tensor = aten::bernoulli(%2992, %2993)
  %2995 : Tensor = aten::div(%2994, %p2)
  %2996 : int[] = prim::Constant[value=[1, 0]]()
  %2997 : int[] = prim::Constant[value=[1, 0]]()
  %2998 : Tensor = aten::permute(%p202, %2997)
  %2999 : int[] = prim::Constant[value=[1024, 768]]()
  %3000 : int[] = prim::Constant[value=[1024, 768]]()
  %3001 : Tensor = aten::reshape(%2940, %3000)
  %3002 : Tensor = aten::mm(%3001, %2998)
  %3003 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3004 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3005 : Tensor = aten::reshape(%3002, %3004)
  %3006 : int = prim::Constant[value=1]()
  %3007 : Tensor = aten::add(%3005, %p201, %3006)
  %3008 : int[] = prim::Constant[value=[1024, 768]]()
  %3009 : int[] = prim::Constant[value=[1024, 768]]()
  %3010 : Tensor = aten::reshape(%3007, %3009)
  %3011 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3012 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3013 : Tensor = aten::reshape(%3010, %3012)
  %3014 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %3015 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %3016 : Tensor = aten::reshape(%3013, %3015)
  %3017 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3018 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3019 : Tensor = aten::permute(%3016, %3018)
  %3020 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %3021 : int[] = prim::Constant[value=[0, 1, 3, 2]]()
  %3022 : Tensor = aten::permute(%3019, %3021)
  %3023 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %3024 : int[] = prim::Constant[value=[2, 12, 64, 512]]()
  %3025 : bool = prim::Constant[value=0]()
  %3026 : Tensor = aten::expand(%3022, %3024, %3025)
  %3027 : int[] = prim::Constant[value=[24, 64, 512]]()
  %3028 : int[] = prim::Constant[value=[24, 64, 512]]()
  %3029 : Tensor = aten::reshape(%3026, %3028)
  %3030 : int[] = prim::Constant[value=[1, 0]]()
  %3031 : int[] = prim::Constant[value=[1, 0]]()
  %3032 : Tensor = aten::permute(%p204, %3031)
  %3033 : int[] = prim::Constant[value=[1024, 768]]()
  %3034 : int[] = prim::Constant[value=[1024, 768]]()
  %3035 : Tensor = aten::reshape(%2940, %3034)
  %3036 : Tensor = aten::mm(%3035, %3032)
  %3037 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3038 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3039 : Tensor = aten::reshape(%3036, %3038)
  %3040 : int = prim::Constant[value=1]()
  %3041 : Tensor = aten::add(%3039, %p203, %3040)
  %3042 : int[] = prim::Constant[value=[1024, 768]]()
  %3043 : int[] = prim::Constant[value=[1024, 768]]()
  %3044 : Tensor = aten::reshape(%3041, %3043)
  %3045 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3046 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3047 : Tensor = aten::reshape(%3044, %3046)
  %3048 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %3049 : int[] = prim::Constant[value=[2, 512, 12, 64]]()
  %3050 : Tensor = aten::reshape(%3047, %3049)
  %3051 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3052 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3053 : Tensor = aten::permute(%3050, %3052)
  %3054 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %3055 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %3056 : bool = prim::Constant[value=0]()
  %3057 : Tensor = aten::expand(%3053, %3055, %3056)
  %3058 : int[] = prim::Constant[value=[24, 512, 64]]()
  %3059 : int[] = prim::Constant[value=[24, 512, 64]]()
  %3060 : Tensor = aten::reshape(%3057, %3059)
  %3061 : Tensor = aten::bmm(%3060, %3029)
  %3062 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %3063 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %3064 : Tensor = aten::reshape(%3061, %3063)
  %3065 : Tensor = aten::div(%3064, %p68)
  %3066 : int = prim::Constant[value=1]()
  %3067 : Tensor = aten::add(%3065, %531, %3066)
  %3068 : int = prim::Constant[value=-1]()
  %3069 : bool = prim::Constant[value=0]()
  %3070 : Tensor = aten::_softmax(%3067, %3068, %3069)
  %3071 : Tensor = aten::mul(%3070, %2995)
  %3072 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %3073 : int[] = prim::Constant[value=[2, 12, 512, 512]]()
  %3074 : bool = prim::Constant[value=0]()
  %3075 : Tensor = aten::expand(%3071, %3073, %3074)
  %3076 : int[] = prim::Constant[value=[24, 512, 512]]()
  %3077 : int[] = prim::Constant[value=[24, 512, 512]]()
  %3078 : Tensor = aten::reshape(%3075, %3077)
  %3079 : Tensor = aten::bmm(%3078, %2986)
  %3080 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %3081 : int[] = prim::Constant[value=[2, 12, 512, 64]]()
  %3082 : Tensor = aten::reshape(%3079, %3081)
  %3083 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3084 : int[] = prim::Constant[value=[0, 2, 1, 3]]()
  %3085 : Tensor = aten::permute(%3082, %3084)
  %3086 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3087 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3088 : Tensor = aten::reshape(%3085, %3087)
  %3089 : int[] = prim::Constant[value=[1024, 768]]()
  %3090 : int[] = prim::Constant[value=[1024, 768]]()
  %3091 : Tensor = aten::reshape(%3088, %3090)
  %3092 : Tensor = aten::mm(%3091, %2955)
  %3093 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3094 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3095 : Tensor = aten::reshape(%3092, %3094)
  %3096 : int = prim::Constant[value=1]()
  %3097 : Tensor = aten::add(%3095, %p197, %3096)
  %3098 : int[] = prim::Constant[value=[1024, 768]]()
  %3099 : int[] = prim::Constant[value=[1024, 768]]()
  %3100 : Tensor = aten::reshape(%3097, %3099)
  %3101 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3102 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3103 : Tensor = aten::reshape(%3100, %3102)
  %3104 : Tensor = aten::mul(%3103, %2952)
  %3105 : int = prim::Constant[value=1]()
  %3106 : Tensor = aten::add(%3104, %2940, %3105)
  %3107 : int[] = prim::Constant[value=[768]]()
  %3108 : float = prim::Constant[value=9.9999999999999998e-13]()
  %3109 : Tensor, %3110 : Tensor, %3111 : Tensor = aten::native_layer_norm(%3106, %3107, %p9, %p8, %3108)
  %3112 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%3109, %3110, %3111)
  %3113 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3114 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3115 : bool = prim::Constant[value=0]()
  %3116 : Tensor = aten::expand(%p4, %3114, %3115)
  %3117 : NoneType = prim::Constant()
  %3118 : Tensor = aten::clone(%3116, %3117)
  %3119 : NoneType = prim::Constant()
  %3120 : Tensor = aten::bernoulli(%3118, %3119)
  %3121 : Tensor = aten::div(%3120, %p2)
  %3122 : int[] = prim::Constant[value=[1, 0]]()
  %3123 : int[] = prim::Constant[value=[1, 0]]()
  %3124 : Tensor = aten::permute(%p206, %3123)
  %3125 : int[] = prim::Constant[value=[1, 0]]()
  %3126 : int[] = prim::Constant[value=[1, 0]]()
  %3127 : Tensor = aten::permute(%p208, %3126)
  %3128 : int[] = prim::Constant[value=[1024, 768]]()
  %3129 : int[] = prim::Constant[value=[1024, 768]]()
  %3130 : Tensor = aten::reshape(%3109, %3129)
  %3131 : Tensor = aten::mm(%3130, %3127)
  %3132 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %3133 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %3134 : Tensor = aten::reshape(%3131, %3133)
  %3135 : int = prim::Constant[value=1]()
  %3136 : Tensor = aten::add(%3134, %p207, %3135)
  %3137 : int[] = prim::Constant[value=[1024, 3072]]()
  %3138 : int[] = prim::Constant[value=[1024, 3072]]()
  %3139 : Tensor = aten::reshape(%3136, %3138)
  %3140 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %3141 : int[] = prim::Constant[value=[2, 512, 3072]]()
  %3142 : Tensor = aten::reshape(%3139, %3141)
  %3143 : Tensor = aten::gelu(%3142)
  %3144 : int[] = prim::Constant[value=[1024, 3072]]()
  %3145 : int[] = prim::Constant[value=[1024, 3072]]()
  %3146 : Tensor = aten::reshape(%3143, %3145)
  %3147 : Tensor = aten::mm(%3146, %3124)
  %3148 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3149 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3150 : Tensor = aten::reshape(%3147, %3149)
  %3151 : int = prim::Constant[value=1]()
  %3152 : Tensor = aten::add(%3150, %p205, %3151)
  %3153 : int[] = prim::Constant[value=[1024, 768]]()
  %3154 : int[] = prim::Constant[value=[1024, 768]]()
  %3155 : Tensor = aten::reshape(%3152, %3154)
  %3156 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3157 : int[] = prim::Constant[value=[2, 512, 768]]()
  %3158 : Tensor = aten::reshape(%3155, %3157)
  %3159 : Tensor = aten::mul(%3158, %3121)
  %3160 : int = prim::Constant[value=1]()
  %3161 : Tensor = aten::add(%3159, %3109, %3160)
  %3162 : int[] = prim::Constant[value=[768]]()
  %3163 : float = prim::Constant[value=9.9999999999999998e-13]()
  %3164 : Tensor, %3165 : Tensor, %3166 : Tensor = aten::native_layer_norm(%3161, %3162, %p7, %p6, %3163)
  %3167 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%3164, %3165, %3166)
  %3168 : int = prim::Constant[value=0]()
  %3169 : int = prim::Constant[value=0]()
  %3170 : int = prim::Constant[value=2]()
  %3171 : int = prim::Constant[value=1]()
  %3172 : Tensor = aten::slice(%3164, %3168, %3169, %3170, %3171)
  %3173 : int = prim::Constant[value=0]()
  %3174 : int = prim::Constant[value=0]()
  %3175 : int = prim::Constant[value=2]()
  %3176 : int = prim::Constant[value=1]()
  %3177 : Tensor = aten::slice(%3172, %3173, %3174, %3175, %3176)
  %3178 : int = prim::Constant[value=1]()
  %3179 : int = prim::Constant[value=0]()
  %3180 : int = prim::Constant[value=1]()
  %3181 : int = prim::Constant[value=1]()
  %3182 : Tensor = aten::slice(%3177, %3178, %3179, %3180, %3181)
  %3183 : int = prim::Constant[value=2]()
  %3184 : int = prim::Constant[value=0]()
  %3185 : int = prim::Constant[value=768]()
  %3186 : int = prim::Constant[value=1]()
  %3187 : Tensor = aten::slice(%3182, %3183, %3184, %3185, %3186)
  %3188 : int[] = prim::Constant[value=[2, 768]]()
  %3189 : int[] = prim::Constant[value=[2, 768]]()
  %3190 : Tensor = aten::reshape(%3187, %3189)
  %3191 : int = prim::Constant[value=1]()
  %3192 : int = prim::Constant[value=1]()
  %3193 : Tensor = aten::addmm(%p209, %3190, %418, %3191, %3192)
  %3194 : Tensor = aten::tanh(%3193)
  %3195 : Tensor = aten::mul(%3194, %415)
  %3196 : int = prim::Constant[value=1]()
  %3197 : int = prim::Constant[value=1]()
  %3198 : Tensor = aten::addmm(%p210, %3195, %216, %3196, %3197)
  %3199 : int[] = prim::Constant[value=[2, 2]]()
  %3200 : int[] = prim::Constant[value=[2, 2]]()
  %3201 : Tensor = aten::reshape(%3198, %3200)
  %3202 : int = prim::Constant[value=1]()
  %3203 : bool = prim::Constant[value=0]()
  %3204 : Tensor = aten::_log_softmax(%3201, %3202, %3203)
  %3205 : NoneType = prim::Constant()
  %3206 : int = prim::Constant[value=1]()
  %3207 : int = prim::Constant[value=-100]()
  %3208 : Tensor, %3209 : Tensor = aten::nll_loss_forward(%3204, %213, %3205, %3206, %3207)
  %3210 : NamedTuple(output : Tensor, total_weight : Tensor) = prim::TupleConstruct(%3208, %3209)
  return (%3208)

